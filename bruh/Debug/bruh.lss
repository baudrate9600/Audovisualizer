
bruh.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000040  00800100  0000048e  00000522  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000048e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000021c  00800140  00800140  00000562  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000562  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000594  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000130  00000000  00000000  000005d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000141a  00000000  00000000  00000704  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b53  00000000  00000000  00001b1e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a09  00000000  00000000  00002671  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000053c  00000000  00000000  0000307c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000626  00000000  00000000  000035b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001542  00000000  00000000  00003bde  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000158  00000000  00000000  00005120  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 b0 00 	jmp	0x160	; 0x160 <__vector_7>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 79 01 	jmp	0x2f2	; 0x2f2 <__vector_11>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee e8       	ldi	r30, 0x8E	; 142
  7c:	f4 e0       	ldi	r31, 0x04	; 4
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 34       	cpi	r26, 0x40	; 64
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	23 e0       	ldi	r18, 0x03	; 3
  8c:	a0 e4       	ldi	r26, 0x40	; 64
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ac 35       	cpi	r26, 0x5C	; 92
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 e6 01 	call	0x3cc	; 0x3cc <main>
  9e:	0c 94 45 02 	jmp	0x48a	; 0x48a <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <initSerial>:
		return (int)val; 
	}
}
void decay_columns(uint16_t decay_speed){
	if((general_timer % decay_speed) == 0){
		for(int i = 0; i < 16; i++){
  a6:	88 e9       	ldi	r24, 0x98	; 152
  a8:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
  ac:	86 e0       	ldi	r24, 0x06	; 6
  ae:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
  b2:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
  b6:	87 e6       	ldi	r24, 0x67	; 103
  b8:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
  bc:	08 95       	ret

000000be <spi>:
  be:	8c b5       	in	r24, 0x2c	; 44
  c0:	80 61       	ori	r24, 0x10	; 16
  c2:	8c bd       	out	0x2c, r24	; 44
  c4:	8d b5       	in	r24, 0x2d	; 45
  c6:	81 60       	ori	r24, 0x01	; 1
  c8:	8d bd       	out	0x2d, r24	; 45
  ca:	8c b5       	in	r24, 0x2c	; 44
  cc:	80 64       	ori	r24, 0x40	; 64
  ce:	8c bd       	out	0x2c, r24	; 44
  d0:	08 95       	ret

000000d2 <send>:
  d2:	5e 98       	cbi	0x0b, 6	; 11
  d4:	8e bd       	out	0x2e, r24	; 46
  d6:	0d b4       	in	r0, 0x2d	; 45
  d8:	07 fe       	sbrs	r0, 7
  da:	fd cf       	rjmp	.-6      	; 0xd6 <send+0x4>
  dc:	7e bd       	out	0x2e, r23	; 46
  de:	0d b4       	in	r0, 0x2d	; 45
  e0:	07 fe       	sbrs	r0, 7
  e2:	fd cf       	rjmp	.-6      	; 0xde <send+0xc>
  e4:	6e bd       	out	0x2e, r22	; 46
  e6:	0d b4       	in	r0, 0x2d	; 45
  e8:	07 fe       	sbrs	r0, 7
  ea:	fd cf       	rjmp	.-6      	; 0xe6 <send+0x14>
  ec:	5e 9a       	sbi	0x0b, 6	; 11
  ee:	08 95       	ret

000000f0 <timer1>:
  f0:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__DATA_REGION_ORIGIN__+0x20>
  f4:	e1 e8       	ldi	r30, 0x81	; 129
  f6:	f0 e0       	ldi	r31, 0x00	; 0
  f8:	10 82       	st	Z, r1
  fa:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
  fe:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
 102:	88 e1       	ldi	r24, 0x18	; 24
 104:	90 e0       	ldi	r25, 0x00	; 0
 106:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
 10a:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
 10e:	80 81       	ld	r24, Z
 110:	88 60       	ori	r24, 0x08	; 8
 112:	80 83       	st	Z, r24
 114:	80 81       	ld	r24, Z
 116:	83 60       	ori	r24, 0x03	; 3
 118:	80 83       	st	Z, r24
 11a:	ef e6       	ldi	r30, 0x6F	; 111
 11c:	f0 e0       	ldi	r31, 0x00	; 0
 11e:	80 81       	ld	r24, Z
 120:	82 60       	ori	r24, 0x02	; 2
 122:	80 83       	st	Z, r24
 124:	08 95       	ret

00000126 <timer2>:
 126:	a0 eb       	ldi	r26, 0xB0	; 176
 128:	b0 e0       	ldi	r27, 0x00	; 0
 12a:	1c 92       	st	X, r1
 12c:	e1 eb       	ldi	r30, 0xB1	; 177
 12e:	f0 e0       	ldi	r31, 0x00	; 0
 130:	10 82       	st	Z, r1
 132:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__DATA_REGION_ORIGIN__+0x52>
 136:	80 e3       	ldi	r24, 0x30	; 48
 138:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__DATA_REGION_ORIGIN__+0x53>
 13c:	8c 91       	ld	r24, X
 13e:	82 60       	ori	r24, 0x02	; 2
 140:	8c 93       	st	X, r24
 142:	80 81       	ld	r24, Z
 144:	83 60       	ori	r24, 0x03	; 3
 146:	80 83       	st	Z, r24
 148:	e0 e7       	ldi	r30, 0x70	; 112
 14a:	f0 e0       	ldi	r31, 0x00	; 0
 14c:	80 81       	ld	r24, Z
 14e:	82 60       	ori	r24, 0x02	; 2
 150:	80 83       	st	Z, r24
 152:	08 95       	ret

00000154 <timer2_stop>:
 154:	e0 e7       	ldi	r30, 0x70	; 112
 156:	f0 e0       	ldi	r31, 0x00	; 0
 158:	80 81       	ld	r24, Z
 15a:	8d 7f       	andi	r24, 0xFD	; 253
 15c:	80 83       	st	Z, r24
 15e:	08 95       	ret

00000160 <__vector_7>:
 160:	1f 92       	push	r1
 162:	0f 92       	push	r0
 164:	0f b6       	in	r0, 0x3f	; 63
 166:	0f 92       	push	r0
 168:	11 24       	eor	r1, r1
 16a:	2f 93       	push	r18
 16c:	3f 93       	push	r19
 16e:	4f 93       	push	r20
 170:	5f 93       	push	r21
 172:	6f 93       	push	r22
 174:	7f 93       	push	r23
 176:	8f 93       	push	r24
 178:	9f 93       	push	r25
 17a:	af 93       	push	r26
 17c:	bf 93       	push	r27
 17e:	cf 93       	push	r28
 180:	df 93       	push	r29
 182:	ef 93       	push	r30
 184:	ff 93       	push	r31
 186:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <sample_done>
 18a:	81 11       	cpse	r24, r1
 18c:	73 c0       	rjmp	.+230    	; 0x274 <__vector_7+0x114>
 18e:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <sample_counter>
 192:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <sample_counter+0x1>
 196:	01 96       	adiw	r24, 0x01	; 1
 198:	79 f4       	brne	.+30     	; 0x1b8 <__vector_7+0x58>
 19a:	ea e7       	ldi	r30, 0x7A	; 122
 19c:	f0 e0       	ldi	r31, 0x00	; 0
 19e:	80 81       	ld	r24, Z
 1a0:	80 64       	ori	r24, 0x40	; 64
 1a2:	80 83       	st	Z, r24
 1a4:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <sample_counter>
 1a8:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <sample_counter+0x1>
 1ac:	01 96       	adiw	r24, 0x01	; 1
 1ae:	90 93 47 01 	sts	0x0147, r25	; 0x800147 <sample_counter+0x1>
 1b2:	80 93 46 01 	sts	0x0146, r24	; 0x800146 <sample_counter>
 1b6:	5e c0       	rjmp	.+188    	; 0x274 <__vector_7+0x114>
 1b8:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <sample_counter>
 1bc:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <sample_counter+0x1>
 1c0:	cf 97       	sbiw	r24, 0x3f	; 63
 1c2:	59 f5       	brne	.+86     	; 0x21a <__vector_7+0xba>
 1c4:	e0 91 46 01 	lds	r30, 0x0146	; 0x800146 <sample_counter>
 1c8:	f0 91 47 01 	lds	r31, 0x0147	; 0x800147 <sample_counter+0x1>
 1cc:	e0 50       	subi	r30, 0x00	; 0
 1ce:	ff 4f       	sbci	r31, 0xFF	; 255
 1d0:	c0 81       	ld	r28, Z
 1d2:	d0 e0       	ldi	r29, 0x00	; 0
 1d4:	60 91 79 00 	lds	r22, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
 1d8:	70 e0       	ldi	r23, 0x00	; 0
 1da:	60 58       	subi	r22, 0x80	; 128
 1dc:	71 09       	sbc	r23, r1
 1de:	07 2e       	mov	r0, r23
 1e0:	00 0c       	add	r0, r0
 1e2:	88 0b       	sbc	r24, r24
 1e4:	99 0b       	sbc	r25, r25
 1e6:	0e 94 0a 02 	call	0x414	; 0x414 <__floatsisf>
 1ea:	cc 0f       	add	r28, r28
 1ec:	dd 1f       	adc	r29, r29
 1ee:	cc 0f       	add	r28, r28
 1f0:	dd 1f       	adc	r29, r29
 1f2:	cc 0f       	add	r28, r28
 1f4:	dd 1f       	adc	r29, r29
 1f6:	c4 5a       	subi	r28, 0xA4	; 164
 1f8:	de 4f       	sbci	r29, 0xFE	; 254
 1fa:	68 83       	st	Y, r22
 1fc:	79 83       	std	Y+1, r23	; 0x01
 1fe:	8a 83       	std	Y+2, r24	; 0x02
 200:	9b 83       	std	Y+3, r25	; 0x03
 202:	81 e0       	ldi	r24, 0x01	; 1
 204:	80 93 41 01 	sts	0x0141, r24	; 0x800141 <sample_done>
 208:	0e 94 aa 00 	call	0x154	; 0x154 <timer2_stop>
 20c:	8f ef       	ldi	r24, 0xFF	; 255
 20e:	9f ef       	ldi	r25, 0xFF	; 255
 210:	90 93 47 01 	sts	0x0147, r25	; 0x800147 <sample_counter+0x1>
 214:	80 93 46 01 	sts	0x0146, r24	; 0x800146 <sample_counter>
 218:	2d c0       	rjmp	.+90     	; 0x274 <__vector_7+0x114>
 21a:	e0 91 46 01 	lds	r30, 0x0146	; 0x800146 <sample_counter>
 21e:	f0 91 47 01 	lds	r31, 0x0147	; 0x800147 <sample_counter+0x1>
 222:	e0 50       	subi	r30, 0x00	; 0
 224:	ff 4f       	sbci	r31, 0xFF	; 255
 226:	c0 81       	ld	r28, Z
 228:	d0 e0       	ldi	r29, 0x00	; 0
 22a:	60 91 79 00 	lds	r22, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
 22e:	70 e0       	ldi	r23, 0x00	; 0
 230:	60 58       	subi	r22, 0x80	; 128
 232:	71 09       	sbc	r23, r1
 234:	07 2e       	mov	r0, r23
 236:	00 0c       	add	r0, r0
 238:	88 0b       	sbc	r24, r24
 23a:	99 0b       	sbc	r25, r25
 23c:	0e 94 0a 02 	call	0x414	; 0x414 <__floatsisf>
 240:	cc 0f       	add	r28, r28
 242:	dd 1f       	adc	r29, r29
 244:	cc 0f       	add	r28, r28
 246:	dd 1f       	adc	r29, r29
 248:	cc 0f       	add	r28, r28
 24a:	dd 1f       	adc	r29, r29
 24c:	c4 5a       	subi	r28, 0xA4	; 164
 24e:	de 4f       	sbci	r29, 0xFE	; 254
 250:	68 83       	st	Y, r22
 252:	79 83       	std	Y+1, r23	; 0x01
 254:	8a 83       	std	Y+2, r24	; 0x02
 256:	9b 83       	std	Y+3, r25	; 0x03
 258:	ea e7       	ldi	r30, 0x7A	; 122
 25a:	f0 e0       	ldi	r31, 0x00	; 0
 25c:	80 81       	ld	r24, Z
 25e:	80 64       	ori	r24, 0x40	; 64
 260:	80 83       	st	Z, r24
 262:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <sample_counter>
 266:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <sample_counter+0x1>
 26a:	01 96       	adiw	r24, 0x01	; 1
 26c:	90 93 47 01 	sts	0x0147, r25	; 0x800147 <sample_counter+0x1>
 270:	80 93 46 01 	sts	0x0146, r24	; 0x800146 <sample_counter>
 274:	ff 91       	pop	r31
 276:	ef 91       	pop	r30
 278:	df 91       	pop	r29
 27a:	cf 91       	pop	r28
 27c:	bf 91       	pop	r27
 27e:	af 91       	pop	r26
 280:	9f 91       	pop	r25
 282:	8f 91       	pop	r24
 284:	7f 91       	pop	r23
 286:	6f 91       	pop	r22
 288:	5f 91       	pop	r21
 28a:	4f 91       	pop	r20
 28c:	3f 91       	pop	r19
 28e:	2f 91       	pop	r18
 290:	0f 90       	pop	r0
 292:	0f be       	out	0x3f, r0	; 63
 294:	0f 90       	pop	r0
 296:	1f 90       	pop	r1
 298:	18 95       	reti

0000029a <render>:
 29a:	cf 93       	push	r28
 29c:	20 91 48 01 	lds	r18, 0x0148	; 0x800148 <render_timer>
 2a0:	30 91 49 01 	lds	r19, 0x0149	; 0x800149 <render_timer+0x1>
 2a4:	28 17       	cp	r18, r24
 2a6:	39 07       	cpc	r19, r25
 2a8:	10 f1       	brcs	.+68     	; 0x2ee <render+0x54>
 2aa:	10 92 49 01 	sts	0x0149, r1	; 0x800149 <render_timer+0x1>
 2ae:	10 92 48 01 	sts	0x0148, r1	; 0x800148 <render_timer>
 2b2:	c0 91 40 01 	lds	r28, 0x0140	; 0x800140 <__data_end>
 2b6:	c0 31       	cpi	r28, 0x10	; 16
 2b8:	41 f4       	brne	.+16     	; 0x2ca <render+0x30>
 2ba:	6f ef       	ldi	r22, 0xFF	; 255
 2bc:	70 e0       	ldi	r23, 0x00	; 0
 2be:	80 e0       	ldi	r24, 0x00	; 0
 2c0:	0e 94 69 00 	call	0xd2	; 0xd2 <send>
 2c4:	10 92 40 01 	sts	0x0140, r1	; 0x800140 <__data_end>
 2c8:	12 c0       	rjmp	.+36     	; 0x2ee <render+0x54>
 2ca:	ec 2f       	mov	r30, r28
 2cc:	f0 e0       	ldi	r31, 0x00	; 0
 2ce:	61 e0       	ldi	r22, 0x01	; 1
 2d0:	70 e0       	ldi	r23, 0x00	; 0
 2d2:	0c 2e       	mov	r0, r28
 2d4:	02 c0       	rjmp	.+4      	; 0x2da <render+0x40>
 2d6:	66 0f       	add	r22, r22
 2d8:	77 1f       	adc	r23, r23
 2da:	0a 94       	dec	r0
 2dc:	e2 f7       	brpl	.-8      	; 0x2d6 <render+0x3c>
 2de:	e4 5b       	subi	r30, 0xB4	; 180
 2e0:	fe 4f       	sbci	r31, 0xFE	; 254
 2e2:	80 81       	ld	r24, Z
 2e4:	0e 94 69 00 	call	0xd2	; 0xd2 <send>
 2e8:	cf 5f       	subi	r28, 0xFF	; 255
 2ea:	c0 93 40 01 	sts	0x0140, r28	; 0x800140 <__data_end>
 2ee:	cf 91       	pop	r28
 2f0:	08 95       	ret

000002f2 <__vector_11>:
 2f2:	1f 92       	push	r1
 2f4:	0f 92       	push	r0
 2f6:	0f b6       	in	r0, 0x3f	; 63
 2f8:	0f 92       	push	r0
 2fa:	11 24       	eor	r1, r1
 2fc:	2f 93       	push	r18
 2fe:	3f 93       	push	r19
 300:	4f 93       	push	r20
 302:	5f 93       	push	r21
 304:	6f 93       	push	r22
 306:	7f 93       	push	r23
 308:	8f 93       	push	r24
 30a:	9f 93       	push	r25
 30c:	af 93       	push	r26
 30e:	bf 93       	push	r27
 310:	ef 93       	push	r30
 312:	ff 93       	push	r31
 314:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <render_timer>
 318:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <render_timer+0x1>
 31c:	01 96       	adiw	r24, 0x01	; 1
 31e:	90 93 49 01 	sts	0x0149, r25	; 0x800149 <render_timer+0x1>
 322:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <render_timer>
 326:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <general_timer>
 32a:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <general_timer+0x1>
 32e:	a0 91 44 01 	lds	r26, 0x0144	; 0x800144 <general_timer+0x2>
 332:	b0 91 45 01 	lds	r27, 0x0145	; 0x800145 <general_timer+0x3>
 336:	01 96       	adiw	r24, 0x01	; 1
 338:	a1 1d       	adc	r26, r1
 33a:	b1 1d       	adc	r27, r1
 33c:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <general_timer>
 340:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <general_timer+0x1>
 344:	a0 93 44 01 	sts	0x0144, r26	; 0x800144 <general_timer+0x2>
 348:	b0 93 45 01 	sts	0x0145, r27	; 0x800145 <general_timer+0x3>
 34c:	81 e0       	ldi	r24, 0x01	; 1
 34e:	90 e0       	ldi	r25, 0x00	; 0
 350:	0e 94 4d 01 	call	0x29a	; 0x29a <render>
 354:	ff 91       	pop	r31
 356:	ef 91       	pop	r30
 358:	bf 91       	pop	r27
 35a:	af 91       	pop	r26
 35c:	9f 91       	pop	r25
 35e:	8f 91       	pop	r24
 360:	7f 91       	pop	r23
 362:	6f 91       	pop	r22
 364:	5f 91       	pop	r21
 366:	4f 91       	pop	r20
 368:	3f 91       	pop	r19
 36a:	2f 91       	pop	r18
 36c:	0f 90       	pop	r0
 36e:	0f be       	out	0x3f, r0	; 63
 370:	0f 90       	pop	r0
 372:	1f 90       	pop	r1
 374:	18 95       	reti

00000376 <demo>:
 376:	ec e4       	ldi	r30, 0x4C	; 76
 378:	f1 e0       	ldi	r31, 0x01	; 1
 37a:	9f ef       	ldi	r25, 0xFF	; 255
 37c:	97 87       	std	Z+15, r25	; 0x0f
 37e:	80 e9       	ldi	r24, 0x90	; 144
 380:	86 87       	std	Z+14, r24	; 0x0e
 382:	85 87       	std	Z+13, r24	; 0x0d
 384:	84 87       	std	Z+12, r24	; 0x0c
 386:	92 87       	std	Z+10, r25	; 0x0a
 388:	81 87       	std	Z+9, r24	; 0x09
 38a:	80 87       	std	Z+8, r24	; 0x08
 38c:	87 83       	std	Z+7, r24	; 0x07
 38e:	80 e8       	ldi	r24, 0x80	; 128
 390:	85 83       	std	Z+5, r24	; 0x05
 392:	84 83       	std	Z+4, r24	; 0x04
 394:	93 83       	std	Z+3, r25	; 0x03
 396:	82 83       	std	Z+2, r24	; 0x02
 398:	81 83       	std	Z+1, r24	; 0x01
 39a:	08 95       	ret

0000039c <init_adc>:
 39c:	aa e7       	ldi	r26, 0x7A	; 122
 39e:	b0 e0       	ldi	r27, 0x00	; 0
 3a0:	8c 91       	ld	r24, X
 3a2:	85 68       	ori	r24, 0x85	; 133
 3a4:	8c 93       	st	X, r24
 3a6:	ec e7       	ldi	r30, 0x7C	; 124
 3a8:	f0 e0       	ldi	r31, 0x00	; 0
 3aa:	80 81       	ld	r24, Z
 3ac:	90 81       	ld	r25, Z
 3ae:	80 7f       	andi	r24, 0xF0	; 240
 3b0:	89 2b       	or	r24, r25
 3b2:	80 83       	st	Z, r24
 3b4:	80 81       	ld	r24, Z
 3b6:	80 62       	ori	r24, 0x20	; 32
 3b8:	80 83       	st	Z, r24
 3ba:	8c 91       	ld	r24, X
 3bc:	80 64       	ori	r24, 0x40	; 64
 3be:	8c 93       	st	X, r24
 3c0:	ea e7       	ldi	r30, 0x7A	; 122
 3c2:	f0 e0       	ldi	r31, 0x00	; 0
 3c4:	80 81       	ld	r24, Z
 3c6:	86 fd       	sbrc	r24, 6
 3c8:	fd cf       	rjmp	.-6      	; 0x3c4 <init_adc+0x28>
 3ca:	08 95       	ret

000003cc <main>:
		}
	}
}
int main(){
	/*Variable initialization */
	sample_counter = -1; 	
 3cc:	8f ef       	ldi	r24, 0xFF	; 255
 3ce:	9f ef       	ldi	r25, 0xFF	; 255
 3d0:	90 93 47 01 	sts	0x0147, r25	; 0x800147 <sample_counter+0x1>
 3d4:	80 93 46 01 	sts	0x0146, r24	; 0x800146 <sample_counter>
	
	/* Pin initialization */ 
    DDRB |= (1 << PB3) | (1 << PB5);
 3d8:	84 b1       	in	r24, 0x04	; 4
 3da:	88 62       	ori	r24, 0x28	; 40
 3dc:	84 b9       	out	0x04, r24	; 4
    DDRB |= ( 1 << PB2 );
 3de:	22 9a       	sbi	0x04, 2	; 4
    PORTB &= ~(1 << PB2);
 3e0:	2a 98       	cbi	0x05, 2	; 5
	DDRB |= NPN_0;
 3e2:	20 9a       	sbi	0x04, 0	; 4
    DDRD |=  (1 << DRCLK ) ;
 3e4:	56 9a       	sbi	0x0a, 6	; 10
	PORTB |= NPN_0;
 3e6:	28 9a       	sbi	0x05, 0	; 5
    spi();
 3e8:	0e 94 5f 00 	call	0xbe	; 0xbe <spi>
	
		/* Render Cycle */
	demo();	
 3ec:	0e 94 bb 01 	call	0x376	; 0x376 <demo>
	uint8_t column_vec[32] ;
	uint8_t old_column[32] ;
	uint8_t display_column[16];
	//columns(column_vec);
	init_adc();
 3f0:	0e 94 ce 01 	call	0x39c	; 0x39c <init_adc>
	initSerial();
 3f4:	0e 94 53 00 	call	0xa6	; 0xa6 <initSerial>
	sei();
 3f8:	78 94       	sei
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3fa:	8f e9       	ldi	r24, 0x9F	; 159
 3fc:	9f e0       	ldi	r25, 0x0F	; 15
 3fe:	01 97       	sbiw	r24, 0x01	; 1
 400:	f1 f7       	brne	.-4      	; 0x3fe <main+0x32>
 402:	00 c0       	rjmp	.+0      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 404:	00 00       	nop
	char buffer[20];
	_delay_ms(1);
	timer1();
 406:	0e 94 78 00 	call	0xf0	; 0xf0 <timer1>
	timer2();
 40a:	0e 94 93 00 	call	0x126	; 0x126 <timer2>
 40e:	ff cf       	rjmp	.-2      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>

00000410 <__floatunsisf>:
 410:	e8 94       	clt
 412:	09 c0       	rjmp	.+18     	; 0x426 <__floatsisf+0x12>

00000414 <__floatsisf>:
 414:	97 fb       	bst	r25, 7
 416:	3e f4       	brtc	.+14     	; 0x426 <__floatsisf+0x12>
 418:	90 95       	com	r25
 41a:	80 95       	com	r24
 41c:	70 95       	com	r23
 41e:	61 95       	neg	r22
 420:	7f 4f       	sbci	r23, 0xFF	; 255
 422:	8f 4f       	sbci	r24, 0xFF	; 255
 424:	9f 4f       	sbci	r25, 0xFF	; 255
 426:	99 23       	and	r25, r25
 428:	a9 f0       	breq	.+42     	; 0x454 <__floatsisf+0x40>
 42a:	f9 2f       	mov	r31, r25
 42c:	96 e9       	ldi	r25, 0x96	; 150
 42e:	bb 27       	eor	r27, r27
 430:	93 95       	inc	r25
 432:	f6 95       	lsr	r31
 434:	87 95       	ror	r24
 436:	77 95       	ror	r23
 438:	67 95       	ror	r22
 43a:	b7 95       	ror	r27
 43c:	f1 11       	cpse	r31, r1
 43e:	f8 cf       	rjmp	.-16     	; 0x430 <__floatsisf+0x1c>
 440:	fa f4       	brpl	.+62     	; 0x480 <__floatsisf+0x6c>
 442:	bb 0f       	add	r27, r27
 444:	11 f4       	brne	.+4      	; 0x44a <__floatsisf+0x36>
 446:	60 ff       	sbrs	r22, 0
 448:	1b c0       	rjmp	.+54     	; 0x480 <__floatsisf+0x6c>
 44a:	6f 5f       	subi	r22, 0xFF	; 255
 44c:	7f 4f       	sbci	r23, 0xFF	; 255
 44e:	8f 4f       	sbci	r24, 0xFF	; 255
 450:	9f 4f       	sbci	r25, 0xFF	; 255
 452:	16 c0       	rjmp	.+44     	; 0x480 <__floatsisf+0x6c>
 454:	88 23       	and	r24, r24
 456:	11 f0       	breq	.+4      	; 0x45c <__floatsisf+0x48>
 458:	96 e9       	ldi	r25, 0x96	; 150
 45a:	11 c0       	rjmp	.+34     	; 0x47e <__floatsisf+0x6a>
 45c:	77 23       	and	r23, r23
 45e:	21 f0       	breq	.+8      	; 0x468 <__floatsisf+0x54>
 460:	9e e8       	ldi	r25, 0x8E	; 142
 462:	87 2f       	mov	r24, r23
 464:	76 2f       	mov	r23, r22
 466:	05 c0       	rjmp	.+10     	; 0x472 <__floatsisf+0x5e>
 468:	66 23       	and	r22, r22
 46a:	71 f0       	breq	.+28     	; 0x488 <__floatsisf+0x74>
 46c:	96 e8       	ldi	r25, 0x86	; 134
 46e:	86 2f       	mov	r24, r22
 470:	70 e0       	ldi	r23, 0x00	; 0
 472:	60 e0       	ldi	r22, 0x00	; 0
 474:	2a f0       	brmi	.+10     	; 0x480 <__floatsisf+0x6c>
 476:	9a 95       	dec	r25
 478:	66 0f       	add	r22, r22
 47a:	77 1f       	adc	r23, r23
 47c:	88 1f       	adc	r24, r24
 47e:	da f7       	brpl	.-10     	; 0x476 <__floatsisf+0x62>
 480:	88 0f       	add	r24, r24
 482:	96 95       	lsr	r25
 484:	87 95       	ror	r24
 486:	97 f9       	bld	r25, 7
 488:	08 95       	ret

0000048a <_exit>:
 48a:	f8 94       	cli

0000048c <__stop_program>:
 48c:	ff cf       	rjmp	.-2      	; 0x48c <__stop_program>
