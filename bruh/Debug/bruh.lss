
bruh.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000034c  00800100  0000144a  000014de  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000144a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000022a  0080044c  0080044c  0000182a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000182a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001888  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000130  00000000  00000000  000018c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001556  00000000  00000000  000019f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b97  00000000  00000000  00002f4e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ac1  00000000  00000000  00003ae5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000054c  00000000  00000000  000045a8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000622  00000000  00000000  00004af4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000015d1  00000000  00000000  00005116  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000170  00000000  00000000  000066e7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 b8 02 	jmp	0x570	; 0x570 <__vector_7>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 81 03 	jmp	0x702	; 0x702 <__vector_11>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	14 e0       	ldi	r17, 0x04	; 4
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	ea e4       	ldi	r30, 0x4A	; 74
      7c:	f4 e1       	ldi	r31, 0x14	; 20
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	ac 34       	cpi	r26, 0x4C	; 76
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	26 e0       	ldi	r18, 0x06	; 6
      8c:	ac e4       	ldi	r26, 0x4C	; 76
      8e:	b4 e0       	ldi	r27, 0x04	; 4
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	a6 37       	cpi	r26, 0x76	; 118
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 03 04 	call	0x806	; 0x806 <main>
      9e:	0c 94 23 0a 	jmp	0x1446	; 0x1446 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <magnitude>:
float magnitude(scomplex x){
	return sqrt( x.real*x.real + x.imag*x.imag);
}
int imagnitude(scomplex x){
	return (int) sqrt(x.real*x.real + x.imag*x.imag);
}
      a6:	4f 92       	push	r4
      a8:	5f 92       	push	r5
      aa:	6f 92       	push	r6
      ac:	7f 92       	push	r7
      ae:	8f 92       	push	r8
      b0:	9f 92       	push	r9
      b2:	af 92       	push	r10
      b4:	bf 92       	push	r11
      b6:	cf 92       	push	r12
      b8:	df 92       	push	r13
      ba:	ef 92       	push	r14
      bc:	ff 92       	push	r15
      be:	cf 93       	push	r28
      c0:	df 93       	push	r29
      c2:	cd b7       	in	r28, 0x3d	; 61
      c4:	de b7       	in	r29, 0x3e	; 62
      c6:	28 97       	sbiw	r28, 0x08	; 8
      c8:	0f b6       	in	r0, 0x3f	; 63
      ca:	f8 94       	cli
      cc:	de bf       	out	0x3e, r29	; 62
      ce:	0f be       	out	0x3f, r0	; 63
      d0:	cd bf       	out	0x3d, r28	; 61
      d2:	29 83       	std	Y+1, r18	; 0x01
      d4:	3a 83       	std	Y+2, r19	; 0x02
      d6:	4b 83       	std	Y+3, r20	; 0x03
      d8:	5c 83       	std	Y+4, r21	; 0x04
      da:	6d 83       	std	Y+5, r22	; 0x05
      dc:	7e 83       	std	Y+6, r23	; 0x06
      de:	8f 83       	std	Y+7, r24	; 0x07
      e0:	98 87       	std	Y+8, r25	; 0x08
      e2:	89 80       	ldd	r8, Y+1	; 0x01
      e4:	9a 80       	ldd	r9, Y+2	; 0x02
      e6:	ab 80       	ldd	r10, Y+3	; 0x03
      e8:	bc 80       	ldd	r11, Y+4	; 0x04
      ea:	cd 80       	ldd	r12, Y+5	; 0x05
      ec:	de 80       	ldd	r13, Y+6	; 0x06
      ee:	ef 80       	ldd	r14, Y+7	; 0x07
      f0:	f8 84       	ldd	r15, Y+8	; 0x08
      f2:	a5 01       	movw	r20, r10
      f4:	94 01       	movw	r18, r8
      f6:	c5 01       	movw	r24, r10
      f8:	b4 01       	movw	r22, r8
      fa:	0e 94 22 06 	call	0xc44	; 0xc44 <__mulsf3>
      fe:	4b 01       	movw	r8, r22
     100:	5c 01       	movw	r10, r24
     102:	a7 01       	movw	r20, r14
     104:	96 01       	movw	r18, r12
     106:	c7 01       	movw	r24, r14
     108:	b6 01       	movw	r22, r12
     10a:	0e 94 22 06 	call	0xc44	; 0xc44 <__mulsf3>
     10e:	9b 01       	movw	r18, r22
     110:	ac 01       	movw	r20, r24
     112:	c5 01       	movw	r24, r10
     114:	b4 01       	movw	r22, r8
     116:	0e 94 f2 04 	call	0x9e4	; 0x9e4 <__addsf3>
     11a:	0e 94 95 06 	call	0xd2a	; 0xd2a <sqrt>
     11e:	28 96       	adiw	r28, 0x08	; 8
     120:	0f b6       	in	r0, 0x3f	; 63
     122:	f8 94       	cli
     124:	de bf       	out	0x3e, r29	; 62
     126:	0f be       	out	0x3f, r0	; 63
     128:	cd bf       	out	0x3d, r28	; 61
     12a:	df 91       	pop	r29
     12c:	cf 91       	pop	r28
     12e:	ff 90       	pop	r15
     130:	ef 90       	pop	r14
     132:	df 90       	pop	r13
     134:	cf 90       	pop	r12
     136:	bf 90       	pop	r11
     138:	af 90       	pop	r10
     13a:	9f 90       	pop	r9
     13c:	8f 90       	pop	r8
     13e:	7f 90       	pop	r7
     140:	6f 90       	pop	r6
     142:	5f 90       	pop	r5
     144:	4f 90       	pop	r4
     146:	08 95       	ret

00000148 <fft>:


int odd,even;
scomplex cmplxPart;	
int val;
void fft(scomplex * samples){
     148:	2f 92       	push	r2
     14a:	3f 92       	push	r3
     14c:	4f 92       	push	r4
     14e:	5f 92       	push	r5
     150:	6f 92       	push	r6
     152:	7f 92       	push	r7
     154:	8f 92       	push	r8
     156:	9f 92       	push	r9
     158:	af 92       	push	r10
     15a:	bf 92       	push	r11
     15c:	cf 92       	push	r12
     15e:	df 92       	push	r13
     160:	ef 92       	push	r14
     162:	ff 92       	push	r15
     164:	0f 93       	push	r16
     166:	1f 93       	push	r17
     168:	cf 93       	push	r28
     16a:	df 93       	push	r29
     16c:	cd b7       	in	r28, 0x3d	; 61
     16e:	de b7       	in	r29, 0x3e	; 62
     170:	66 97       	sbiw	r28, 0x16	; 22
     172:	0f b6       	in	r0, 0x3f	; 63
     174:	f8 94       	cli
     176:	de bf       	out	0x3e, r29	; 62
     178:	0f be       	out	0x3f, r0	; 63
     17a:	cd bf       	out	0x3d, r28	; 61
     17c:	3c 01       	movw	r6, r24
	for (int i = 0; i < OUTER_LOOP; i++){
		counter = 0;
		int offset = 0; 
		for(int j = 0; j < INNER_LOOP; j++){
			if(counter == line){
				counter = 0;
     17e:	26 e0       	ldi	r18, 0x06	; 6
     180:	30 e0       	ldi	r19, 0x00	; 0
     182:	3c 8b       	std	Y+20, r19	; 0x14
     184:	2b 8b       	std	Y+19, r18	; 0x13
	//number of stages 
	//        N
	// X[k] = Î£ x_k W_n
	//       n=0 
	
	int stride = 0;
     186:	1a 8a       	std	Y+18, r1	; 0x12
     188:	19 8a       	std	Y+17, r1	; 0x11
scomplex cmplxPart;	
int val;
void fft(scomplex * samples){
	int counter = 0;
	//determines the offset between odd and even 
	int line = 1;
     18a:	44 24       	eor	r4, r4
     18c:	43 94       	inc	r4
     18e:	51 2c       	mov	r5, r1
     190:	31 c1       	rjmp	.+610    	; 0x3f4 <fft+0x2ac>
	int stride = 0;
	for (int i = 0; i < OUTER_LOOP; i++){
		counter = 0;
		int offset = 0; 
		for(int j = 0; j < INNER_LOOP; j++){
			if(counter == line){
     192:	42 14       	cp	r4, r2
     194:	53 04       	cpc	r5, r3
     196:	41 f4       	brne	.+16     	; 0x1a8 <fft+0x60>
				counter = 0;
				offset += line;
     198:	8f 85       	ldd	r24, Y+15	; 0x0f
     19a:	98 89       	ldd	r25, Y+16	; 0x10
     19c:	84 0d       	add	r24, r4
     19e:	95 1d       	adc	r25, r5
     1a0:	98 8b       	std	Y+16, r25	; 0x10
     1a2:	8f 87       	std	Y+15, r24	; 0x0f
	for (int i = 0; i < OUTER_LOOP; i++){
		counter = 0;
		int offset = 0; 
		for(int j = 0; j < INNER_LOOP; j++){
			if(counter == line){
				counter = 0;
     1a4:	21 2c       	mov	r2, r1
     1a6:	31 2c       	mov	r3, r1
				offset += line;
			}	
			val = stride + counter;
     1a8:	89 89       	ldd	r24, Y+17	; 0x11
     1aa:	9a 89       	ldd	r25, Y+18	; 0x12
     1ac:	82 0d       	add	r24, r2
     1ae:	93 1d       	adc	r25, r3
     1b0:	90 93 4e 04 	sts	0x044E, r25	; 0x80044e <val+0x1>
     1b4:	80 93 4d 04 	sts	0x044D, r24	; 0x80044d <val>
			cmplxPart.real = lut_cos[val];
     1b8:	88 0f       	add	r24, r24
     1ba:	99 1f       	adc	r25, r25
     1bc:	88 0f       	add	r24, r24
     1be:	99 1f       	adc	r25, r25
     1c0:	fc 01       	movw	r30, r24
     1c2:	e4 5c       	subi	r30, 0xC4	; 196
     1c4:	fc 4f       	sbci	r31, 0xFC	; 252
     1c6:	80 80       	ld	r8, Z
     1c8:	91 80       	ldd	r9, Z+1	; 0x01
     1ca:	a2 80       	ldd	r10, Z+2	; 0x02
     1cc:	b3 80       	ldd	r11, Z+3	; 0x03
     1ce:	a3 e5       	ldi	r26, 0x53	; 83
     1d0:	b4 e0       	ldi	r27, 0x04	; 4
     1d2:	8d 92       	st	X+, r8
     1d4:	9d 92       	st	X+, r9
     1d6:	ad 92       	st	X+, r10
     1d8:	bc 92       	st	X, r11
     1da:	13 97       	sbiw	r26, 0x03	; 3
			cmplxPart.imag = lut_sin[val];
     1dc:	fc 01       	movw	r30, r24
     1de:	e0 5c       	subi	r30, 0xC0	; 192
     1e0:	fd 4f       	sbci	r31, 0xFD	; 253
     1e2:	c0 80       	ld	r12, Z
     1e4:	d1 80       	ldd	r13, Z+1	; 0x01
     1e6:	e2 80       	ldd	r14, Z+2	; 0x02
     1e8:	f3 80       	ldd	r15, Z+3	; 0x03
     1ea:	c0 92 57 04 	sts	0x0457, r12	; 0x800457 <cmplxPart+0x4>
     1ee:	d0 92 58 04 	sts	0x0458, r13	; 0x800458 <cmplxPart+0x5>
     1f2:	e0 92 59 04 	sts	0x0459, r14	; 0x800459 <cmplxPart+0x6>
     1f6:	f0 92 5a 04 	sts	0x045A, r15	; 0x80045a <cmplxPart+0x7>

			even = j+offset;
     1fa:	ef 85       	ldd	r30, Y+15	; 0x0f
     1fc:	f8 89       	ldd	r31, Y+16	; 0x10
     1fe:	2d 81       	ldd	r18, Y+5	; 0x05
     200:	3e 81       	ldd	r19, Y+6	; 0x06
     202:	e2 0f       	add	r30, r18
     204:	f3 1f       	adc	r31, r19
     206:	fe 8b       	std	Y+22, r31	; 0x16
     208:	ed 8b       	std	Y+21, r30	; 0x15
     20a:	f0 93 52 04 	sts	0x0452, r31	; 0x800452 <even+0x1>
     20e:	e0 93 51 04 	sts	0x0451, r30	; 0x800451 <even>
			odd = even + line;
     212:	8f 01       	movw	r16, r30
     214:	04 0d       	add	r16, r4
     216:	15 1d       	adc	r17, r5
     218:	10 93 50 04 	sts	0x0450, r17	; 0x800450 <odd+0x1>
     21c:	00 93 4f 04 	sts	0x044F, r16	; 0x80044f <odd>

			cmplxPart = multiply(samples[odd],cmplxPart);
     220:	00 0f       	add	r16, r16
     222:	11 1f       	adc	r17, r17
     224:	00 0f       	add	r16, r16
     226:	11 1f       	adc	r17, r17
     228:	00 0f       	add	r16, r16
     22a:	11 1f       	adc	r17, r17
     22c:	06 0d       	add	r16, r6
     22e:	17 1d       	adc	r17, r7
     230:	d8 01       	movw	r26, r16
     232:	8d 91       	ld	r24, X+
     234:	9d 91       	ld	r25, X+
     236:	0d 90       	ld	r0, X+
     238:	bc 91       	ld	r27, X
     23a:	a0 2d       	mov	r26, r0
     23c:	8b 87       	std	Y+11, r24	; 0x0b
     23e:	9c 87       	std	Y+12, r25	; 0x0c
     240:	ad 87       	std	Y+13, r26	; 0x0d
     242:	be 87       	std	Y+14, r27	; 0x0e
     244:	d8 01       	movw	r26, r16
     246:	14 96       	adiw	r26, 0x04	; 4
     248:	8d 91       	ld	r24, X+
     24a:	9d 91       	ld	r25, X+
     24c:	0d 90       	ld	r0, X+
     24e:	bc 91       	ld	r27, X
     250:	a0 2d       	mov	r26, r0
     252:	8f 83       	std	Y+7, r24	; 0x07
     254:	98 87       	std	Y+8, r25	; 0x08
     256:	a9 87       	std	Y+9, r26	; 0x09
     258:	ba 87       	std	Y+10, r27	; 0x0a
    return num;
}

scomplex multiply(scomplex x, scomplex y){
	scomplex mult;
	mult.real = x.real * y.real -(x.imag*y.imag);
     25a:	2b 85       	ldd	r18, Y+11	; 0x0b
     25c:	3c 85       	ldd	r19, Y+12	; 0x0c
     25e:	4d 85       	ldd	r20, Y+13	; 0x0d
     260:	5e 85       	ldd	r21, Y+14	; 0x0e
     262:	c5 01       	movw	r24, r10
     264:	b4 01       	movw	r22, r8
     266:	0e 94 22 06 	call	0xc44	; 0xc44 <__mulsf3>
     26a:	69 83       	std	Y+1, r22	; 0x01
     26c:	7a 83       	std	Y+2, r23	; 0x02
     26e:	8b 83       	std	Y+3, r24	; 0x03
     270:	9c 83       	std	Y+4, r25	; 0x04
     272:	2f 81       	ldd	r18, Y+7	; 0x07
     274:	38 85       	ldd	r19, Y+8	; 0x08
     276:	49 85       	ldd	r20, Y+9	; 0x09
     278:	5a 85       	ldd	r21, Y+10	; 0x0a
     27a:	c7 01       	movw	r24, r14
     27c:	b6 01       	movw	r22, r12
     27e:	0e 94 22 06 	call	0xc44	; 0xc44 <__mulsf3>
     282:	9b 01       	movw	r18, r22
     284:	ac 01       	movw	r20, r24
     286:	69 81       	ldd	r22, Y+1	; 0x01
     288:	7a 81       	ldd	r23, Y+2	; 0x02
     28a:	8b 81       	ldd	r24, Y+3	; 0x03
     28c:	9c 81       	ldd	r25, Y+4	; 0x04
     28e:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <__subsf3>
     292:	69 83       	std	Y+1, r22	; 0x01
     294:	7a 83       	std	Y+2, r23	; 0x02
     296:	8b 83       	std	Y+3, r24	; 0x03
     298:	9c 83       	std	Y+4, r25	; 0x04
	mult.imag = x.real * y.imag + x.imag *y.real;
     29a:	2b 85       	ldd	r18, Y+11	; 0x0b
     29c:	3c 85       	ldd	r19, Y+12	; 0x0c
     29e:	4d 85       	ldd	r20, Y+13	; 0x0d
     2a0:	5e 85       	ldd	r21, Y+14	; 0x0e
     2a2:	c7 01       	movw	r24, r14
     2a4:	b6 01       	movw	r22, r12
     2a6:	0e 94 22 06 	call	0xc44	; 0xc44 <__mulsf3>
     2aa:	6b 01       	movw	r12, r22
     2ac:	7c 01       	movw	r14, r24
     2ae:	2f 81       	ldd	r18, Y+7	; 0x07
     2b0:	38 85       	ldd	r19, Y+8	; 0x08
     2b2:	49 85       	ldd	r20, Y+9	; 0x09
     2b4:	5a 85       	ldd	r21, Y+10	; 0x0a
     2b6:	c5 01       	movw	r24, r10
     2b8:	b4 01       	movw	r22, r8
     2ba:	0e 94 22 06 	call	0xc44	; 0xc44 <__mulsf3>
     2be:	9b 01       	movw	r18, r22
     2c0:	ac 01       	movw	r20, r24
     2c2:	c7 01       	movw	r24, r14
     2c4:	b6 01       	movw	r22, r12
     2c6:	0e 94 f2 04 	call	0x9e4	; 0x9e4 <__addsf3>
     2ca:	9b 01       	movw	r18, r22
     2cc:	ac 01       	movw	r20, r24
			cmplxPart.imag = lut_sin[val];

			even = j+offset;
			odd = even + line;

			cmplxPart = multiply(samples[odd],cmplxPart);
     2ce:	89 81       	ldd	r24, Y+1	; 0x01
     2d0:	9a 81       	ldd	r25, Y+2	; 0x02
     2d2:	ab 81       	ldd	r26, Y+3	; 0x03
     2d4:	bc 81       	ldd	r27, Y+4	; 0x04
     2d6:	e3 e5       	ldi	r30, 0x53	; 83
     2d8:	f4 e0       	ldi	r31, 0x04	; 4
     2da:	80 83       	st	Z, r24
     2dc:	91 83       	std	Z+1, r25	; 0x01
     2de:	a2 83       	std	Z+2, r26	; 0x02
     2e0:	b3 83       	std	Z+3, r27	; 0x03
     2e2:	20 93 57 04 	sts	0x0457, r18	; 0x800457 <cmplxPart+0x4>
     2e6:	30 93 58 04 	sts	0x0458, r19	; 0x800458 <cmplxPart+0x5>
     2ea:	40 93 59 04 	sts	0x0459, r20	; 0x800459 <cmplxPart+0x6>
     2ee:	50 93 5a 04 	sts	0x045A, r21	; 0x80045a <cmplxPart+0x7>
			samples[odd] = subtract(samples[even],cmplxPart);
     2f2:	8d 89       	ldd	r24, Y+21	; 0x15
     2f4:	9e 89       	ldd	r25, Y+22	; 0x16
     2f6:	88 0f       	add	r24, r24
     2f8:	99 1f       	adc	r25, r25
     2fa:	88 0f       	add	r24, r24
     2fc:	99 1f       	adc	r25, r25
     2fe:	88 0f       	add	r24, r24
     300:	99 1f       	adc	r25, r25
     302:	86 0d       	add	r24, r6
     304:	97 1d       	adc	r25, r7
     306:	98 87       	std	Y+8, r25	; 0x08
     308:	8f 83       	std	Y+7, r24	; 0x07
	return ad;
}
scomplex subtract(scomplex x, scomplex y){
	scomplex sub; 
	sub.real = x.real - y.real; 
	sub.imag = x.imag - y.imag;
     30a:	dc 01       	movw	r26, r24
     30c:	14 96       	adiw	r26, 0x04	; 4
     30e:	6d 91       	ld	r22, X+
     310:	7d 91       	ld	r23, X+
     312:	8d 91       	ld	r24, X+
     314:	9c 91       	ld	r25, X
     316:	17 97       	sbiw	r26, 0x07	; 7
     318:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <__subsf3>
     31c:	6b 01       	movw	r12, r22
     31e:	7c 01       	movw	r14, r24

			even = j+offset;
			odd = even + line;

			cmplxPart = multiply(samples[odd],cmplxPart);
			samples[odd] = subtract(samples[even],cmplxPart);
     320:	29 81       	ldd	r18, Y+1	; 0x01
     322:	3a 81       	ldd	r19, Y+2	; 0x02
     324:	4b 81       	ldd	r20, Y+3	; 0x03
     326:	5c 81       	ldd	r21, Y+4	; 0x04
     328:	ef 81       	ldd	r30, Y+7	; 0x07
     32a:	f8 85       	ldd	r31, Y+8	; 0x08
     32c:	60 81       	ld	r22, Z
     32e:	71 81       	ldd	r23, Z+1	; 0x01
     330:	82 81       	ldd	r24, Z+2	; 0x02
     332:	93 81       	ldd	r25, Z+3	; 0x03
     334:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <__subsf3>
     338:	d8 01       	movw	r26, r16
     33a:	6d 93       	st	X+, r22
     33c:	7d 93       	st	X+, r23
     33e:	8d 93       	st	X+, r24
     340:	9c 93       	st	X, r25
     342:	13 97       	sbiw	r26, 0x03	; 3
     344:	f8 01       	movw	r30, r16
     346:	c4 82       	std	Z+4, r12	; 0x04
     348:	d5 82       	std	Z+5, r13	; 0x05
     34a:	e6 82       	std	Z+6, r14	; 0x06
     34c:	f7 82       	std	Z+7, r15	; 0x07
			samples[even] = add(samples[even], cmplxPart);
     34e:	20 91 51 04 	lds	r18, 0x0451	; 0x800451 <even>
     352:	30 91 52 04 	lds	r19, 0x0452	; 0x800452 <even+0x1>
     356:	22 0f       	add	r18, r18
     358:	33 1f       	adc	r19, r19
     35a:	22 0f       	add	r18, r18
     35c:	33 1f       	adc	r19, r19
     35e:	22 0f       	add	r18, r18
     360:	33 1f       	adc	r19, r19
     362:	26 0d       	add	r18, r6
     364:	37 1d       	adc	r19, r7
     366:	3a 83       	std	Y+2, r19	; 0x02
     368:	29 83       	std	Y+1, r18	; 0x01
	return mult;
}
scomplex add(scomplex x, scomplex y){
	scomplex ad; 
	ad.real = x.real + y.real; 
	ad.imag = x.imag + y.imag;
     36a:	d9 01       	movw	r26, r18
     36c:	14 96       	adiw	r26, 0x04	; 4
     36e:	2d 91       	ld	r18, X+
     370:	3d 91       	ld	r19, X+
     372:	4d 91       	ld	r20, X+
     374:	5c 91       	ld	r21, X
     376:	17 97       	sbiw	r26, 0x07	; 7
     378:	60 91 57 04 	lds	r22, 0x0457	; 0x800457 <cmplxPart+0x4>
     37c:	70 91 58 04 	lds	r23, 0x0458	; 0x800458 <cmplxPart+0x5>
     380:	80 91 59 04 	lds	r24, 0x0459	; 0x800459 <cmplxPart+0x6>
     384:	90 91 5a 04 	lds	r25, 0x045A	; 0x80045a <cmplxPart+0x7>
     388:	0e 94 f2 04 	call	0x9e4	; 0x9e4 <__addsf3>
     38c:	6b 01       	movw	r12, r22
     38e:	7c 01       	movw	r14, r24
			even = j+offset;
			odd = even + line;

			cmplxPart = multiply(samples[odd],cmplxPart);
			samples[odd] = subtract(samples[even],cmplxPart);
			samples[even] = add(samples[even], cmplxPart);
     390:	e3 e5       	ldi	r30, 0x53	; 83
     392:	f4 e0       	ldi	r31, 0x04	; 4
     394:	20 81       	ld	r18, Z
     396:	31 81       	ldd	r19, Z+1	; 0x01
     398:	42 81       	ldd	r20, Z+2	; 0x02
     39a:	53 81       	ldd	r21, Z+3	; 0x03
     39c:	a9 81       	ldd	r26, Y+1	; 0x01
     39e:	ba 81       	ldd	r27, Y+2	; 0x02
     3a0:	6d 91       	ld	r22, X+
     3a2:	7d 91       	ld	r23, X+
     3a4:	8d 91       	ld	r24, X+
     3a6:	9c 91       	ld	r25, X
     3a8:	0e 94 f2 04 	call	0x9e4	; 0x9e4 <__addsf3>
     3ac:	e9 81       	ldd	r30, Y+1	; 0x01
     3ae:	fa 81       	ldd	r31, Y+2	; 0x02
     3b0:	60 83       	st	Z, r22
     3b2:	71 83       	std	Z+1, r23	; 0x01
     3b4:	82 83       	std	Z+2, r24	; 0x02
     3b6:	93 83       	std	Z+3, r25	; 0x03
     3b8:	c4 82       	std	Z+4, r12	; 0x04
     3ba:	d5 82       	std	Z+5, r13	; 0x05
     3bc:	e6 82       	std	Z+6, r14	; 0x06
     3be:	f7 82       	std	Z+7, r15	; 0x07
			counter ++;
     3c0:	bf ef       	ldi	r27, 0xFF	; 255
     3c2:	2b 1a       	sub	r2, r27
     3c4:	3b 0a       	sbc	r3, r27
	
	int stride = 0;
	for (int i = 0; i < OUTER_LOOP; i++){
		counter = 0;
		int offset = 0; 
		for(int j = 0; j < INNER_LOOP; j++){
     3c6:	ed 81       	ldd	r30, Y+5	; 0x05
     3c8:	fe 81       	ldd	r31, Y+6	; 0x06
     3ca:	31 96       	adiw	r30, 0x01	; 1
     3cc:	fe 83       	std	Y+6, r31	; 0x06
     3ce:	ed 83       	std	Y+5, r30	; 0x05
     3d0:	b0 97       	sbiw	r30, 0x20	; 32
     3d2:	09 f0       	breq	.+2      	; 0x3d6 <fft+0x28e>
     3d4:	de ce       	rjmp	.-580    	; 0x192 <fft+0x4a>
			samples[odd] = subtract(samples[even],cmplxPart);
			samples[even] = add(samples[even], cmplxPart);
			counter ++;

		}
		stride = stride + line; 
     3d6:	29 89       	ldd	r18, Y+17	; 0x11
     3d8:	3a 89       	ldd	r19, Y+18	; 0x12
     3da:	24 0d       	add	r18, r4
     3dc:	35 1d       	adc	r19, r5
     3de:	3a 8b       	std	Y+18, r19	; 0x12
     3e0:	29 8b       	std	Y+17, r18	; 0x11
		line = line * 2;
     3e2:	44 0c       	add	r4, r4
     3e4:	55 1c       	adc	r5, r5
     3e6:	8b 89       	ldd	r24, Y+19	; 0x13
     3e8:	9c 89       	ldd	r25, Y+20	; 0x14
     3ea:	01 97       	sbiw	r24, 0x01	; 1
     3ec:	9c 8b       	std	Y+20, r25	; 0x14
     3ee:	8b 8b       	std	Y+19, r24	; 0x13
	//        N
	// X[k] = Î£ x_k W_n
	//       n=0 
	
	int stride = 0;
	for (int i = 0; i < OUTER_LOOP; i++){
     3f0:	89 2b       	or	r24, r25
     3f2:	39 f0       	breq	.+14     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>


int odd,even;
scomplex cmplxPart;	
int val;
void fft(scomplex * samples){
     3f4:	1e 82       	std	Y+6, r1	; 0x06
     3f6:	1d 82       	std	Y+5, r1	; 0x05
     3f8:	18 8a       	std	Y+16, r1	; 0x10
     3fa:	1f 86       	std	Y+15, r1	; 0x0f
     3fc:	21 2c       	mov	r2, r1
     3fe:	31 2c       	mov	r3, r1
     400:	c8 ce       	rjmp	.-624    	; 0x192 <fft+0x4a>
		}
		stride = stride + line; 
		line = line * 2;
	}

}
     402:	66 96       	adiw	r28, 0x16	; 22
     404:	0f b6       	in	r0, 0x3f	; 63
     406:	f8 94       	cli
     408:	de bf       	out	0x3e, r29	; 62
     40a:	0f be       	out	0x3f, r0	; 63
     40c:	cd bf       	out	0x3d, r28	; 61
     40e:	df 91       	pop	r29
     410:	cf 91       	pop	r28
     412:	1f 91       	pop	r17
     414:	0f 91       	pop	r16
     416:	ff 90       	pop	r15
     418:	ef 90       	pop	r14
     41a:	df 90       	pop	r13
     41c:	cf 90       	pop	r12
     41e:	bf 90       	pop	r11
     420:	af 90       	pop	r10
     422:	9f 90       	pop	r9
     424:	8f 90       	pop	r8
     426:	7f 90       	pop	r7
     428:	6f 90       	pop	r6
     42a:	5f 90       	pop	r5
     42c:	4f 90       	pop	r4
     42e:	3f 90       	pop	r3
     430:	2f 90       	pop	r2
     432:	08 95       	ret

00000434 <initSerial>:
		return (int)val; 
	}
}
void decay_columns(uint16_t decay_speed){
	if((general_timer % decay_speed) == 0){
		for(int i = 0; i < 16; i++){
     434:	88 e9       	ldi	r24, 0x98	; 152
     436:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
     43a:	86 e0       	ldi	r24, 0x06	; 6
     43c:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
     440:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
     444:	87 e6       	ldi	r24, 0x67	; 103
     446:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
     44a:	08 95       	ret

0000044c <writeChar>:
     44c:	e0 ec       	ldi	r30, 0xC0	; 192
     44e:	f0 e0       	ldi	r31, 0x00	; 0
     450:	90 81       	ld	r25, Z
     452:	95 ff       	sbrs	r25, 5
     454:	fd cf       	rjmp	.-6      	; 0x450 <writeChar+0x4>
     456:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     45a:	08 95       	ret

0000045c <writeString>:
     45c:	0f 93       	push	r16
     45e:	1f 93       	push	r17
     460:	cf 93       	push	r28
     462:	fc 01       	movw	r30, r24
     464:	80 81       	ld	r24, Z
     466:	88 23       	and	r24, r24
     468:	59 f0       	breq	.+22     	; 0x480 <writeString+0x24>
     46a:	8f 01       	movw	r16, r30
     46c:	c0 e0       	ldi	r28, 0x00	; 0
     46e:	0e 94 26 02 	call	0x44c	; 0x44c <writeChar>
     472:	cf 5f       	subi	r28, 0xFF	; 255
     474:	f8 01       	movw	r30, r16
     476:	ec 0f       	add	r30, r28
     478:	f1 1d       	adc	r31, r1
     47a:	80 81       	ld	r24, Z
     47c:	81 11       	cpse	r24, r1
     47e:	f7 cf       	rjmp	.-18     	; 0x46e <writeString+0x12>
     480:	cf 91       	pop	r28
     482:	1f 91       	pop	r17
     484:	0f 91       	pop	r16
     486:	08 95       	ret

00000488 <writeInt>:
     488:	cf 93       	push	r28
     48a:	df 93       	push	r29
     48c:	cd b7       	in	r28, 0x3d	; 61
     48e:	de b7       	in	r29, 0x3e	; 62
     490:	2a 97       	sbiw	r28, 0x0a	; 10
     492:	0f b6       	in	r0, 0x3f	; 63
     494:	f8 94       	cli
     496:	de bf       	out	0x3e, r29	; 62
     498:	0f be       	out	0x3f, r0	; 63
     49a:	cd bf       	out	0x3d, r28	; 61
     49c:	4a e0       	ldi	r20, 0x0A	; 10
     49e:	be 01       	movw	r22, r28
     4a0:	6f 5f       	subi	r22, 0xFF	; 255
     4a2:	7f 4f       	sbci	r23, 0xFF	; 255
     4a4:	0e 94 04 07 	call	0xe08	; 0xe08 <__itoa_ncheck>
     4a8:	ce 01       	movw	r24, r28
     4aa:	01 96       	adiw	r24, 0x01	; 1
     4ac:	0e 94 2e 02 	call	0x45c	; 0x45c <writeString>
     4b0:	2a 96       	adiw	r28, 0x0a	; 10
     4b2:	0f b6       	in	r0, 0x3f	; 63
     4b4:	f8 94       	cli
     4b6:	de bf       	out	0x3e, r29	; 62
     4b8:	0f be       	out	0x3f, r0	; 63
     4ba:	cd bf       	out	0x3d, r28	; 61
     4bc:	df 91       	pop	r29
     4be:	cf 91       	pop	r28
     4c0:	08 95       	ret

000004c2 <spi>:
     4c2:	8c b5       	in	r24, 0x2c	; 44
     4c4:	80 61       	ori	r24, 0x10	; 16
     4c6:	8c bd       	out	0x2c, r24	; 44
     4c8:	8d b5       	in	r24, 0x2d	; 45
     4ca:	81 60       	ori	r24, 0x01	; 1
     4cc:	8d bd       	out	0x2d, r24	; 45
     4ce:	8c b5       	in	r24, 0x2c	; 44
     4d0:	80 64       	ori	r24, 0x40	; 64
     4d2:	8c bd       	out	0x2c, r24	; 44
     4d4:	08 95       	ret

000004d6 <send>:
     4d6:	5e 98       	cbi	0x0b, 6	; 11
     4d8:	8e bd       	out	0x2e, r24	; 46
     4da:	0d b4       	in	r0, 0x2d	; 45
     4dc:	07 fe       	sbrs	r0, 7
     4de:	fd cf       	rjmp	.-6      	; 0x4da <send+0x4>
     4e0:	7e bd       	out	0x2e, r23	; 46
     4e2:	0d b4       	in	r0, 0x2d	; 45
     4e4:	07 fe       	sbrs	r0, 7
     4e6:	fd cf       	rjmp	.-6      	; 0x4e2 <send+0xc>
     4e8:	6e bd       	out	0x2e, r22	; 46
     4ea:	0d b4       	in	r0, 0x2d	; 45
     4ec:	07 fe       	sbrs	r0, 7
     4ee:	fd cf       	rjmp	.-6      	; 0x4ea <send+0x14>
     4f0:	5e 9a       	sbi	0x0b, 6	; 11
     4f2:	08 95       	ret

000004f4 <timer1>:
     4f4:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__DATA_REGION_ORIGIN__+0x20>
     4f8:	e1 e8       	ldi	r30, 0x81	; 129
     4fa:	f0 e0       	ldi	r31, 0x00	; 0
     4fc:	10 82       	st	Z, r1
     4fe:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     502:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     506:	88 e1       	ldi	r24, 0x18	; 24
     508:	90 e0       	ldi	r25, 0x00	; 0
     50a:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
     50e:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
     512:	80 81       	ld	r24, Z
     514:	88 60       	ori	r24, 0x08	; 8
     516:	80 83       	st	Z, r24
     518:	80 81       	ld	r24, Z
     51a:	83 60       	ori	r24, 0x03	; 3
     51c:	80 83       	st	Z, r24
     51e:	ef e6       	ldi	r30, 0x6F	; 111
     520:	f0 e0       	ldi	r31, 0x00	; 0
     522:	80 81       	ld	r24, Z
     524:	82 60       	ori	r24, 0x02	; 2
     526:	80 83       	st	Z, r24
     528:	08 95       	ret

0000052a <timer2>:
     52a:	a0 eb       	ldi	r26, 0xB0	; 176
     52c:	b0 e0       	ldi	r27, 0x00	; 0
     52e:	1c 92       	st	X, r1
     530:	e1 eb       	ldi	r30, 0xB1	; 177
     532:	f0 e0       	ldi	r31, 0x00	; 0
     534:	10 82       	st	Z, r1
     536:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__DATA_REGION_ORIGIN__+0x52>
     53a:	88 e1       	ldi	r24, 0x18	; 24
     53c:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__DATA_REGION_ORIGIN__+0x53>
     540:	8c 91       	ld	r24, X
     542:	82 60       	ori	r24, 0x02	; 2
     544:	8c 93       	st	X, r24
     546:	80 81       	ld	r24, Z
     548:	83 60       	ori	r24, 0x03	; 3
     54a:	80 83       	st	Z, r24
     54c:	e0 e7       	ldi	r30, 0x70	; 112
     54e:	f0 e0       	ldi	r31, 0x00	; 0
     550:	80 81       	ld	r24, Z
     552:	82 60       	ori	r24, 0x02	; 2
     554:	80 83       	st	Z, r24
     556:	08 95       	ret

00000558 <timer2_stop>:
     558:	e0 e7       	ldi	r30, 0x70	; 112
     55a:	f0 e0       	ldi	r31, 0x00	; 0
     55c:	80 81       	ld	r24, Z
     55e:	8d 7f       	andi	r24, 0xFD	; 253
     560:	80 83       	st	Z, r24
     562:	08 95       	ret

00000564 <timer2_start>:
     564:	e0 e7       	ldi	r30, 0x70	; 112
     566:	f0 e0       	ldi	r31, 0x00	; 0
     568:	80 81       	ld	r24, Z
     56a:	82 60       	ori	r24, 0x02	; 2
     56c:	80 83       	st	Z, r24
     56e:	08 95       	ret

00000570 <__vector_7>:
     570:	1f 92       	push	r1
     572:	0f 92       	push	r0
     574:	0f b6       	in	r0, 0x3f	; 63
     576:	0f 92       	push	r0
     578:	11 24       	eor	r1, r1
     57a:	2f 93       	push	r18
     57c:	3f 93       	push	r19
     57e:	4f 93       	push	r20
     580:	5f 93       	push	r21
     582:	6f 93       	push	r22
     584:	7f 93       	push	r23
     586:	8f 93       	push	r24
     588:	9f 93       	push	r25
     58a:	af 93       	push	r26
     58c:	bf 93       	push	r27
     58e:	cf 93       	push	r28
     590:	df 93       	push	r29
     592:	ef 93       	push	r30
     594:	ff 93       	push	r31
     596:	80 91 5b 04 	lds	r24, 0x045B	; 0x80045b <sample_done>
     59a:	81 11       	cpse	r24, r1
     59c:	73 c0       	rjmp	.+230    	; 0x684 <__vector_7+0x114>
     59e:	80 91 60 04 	lds	r24, 0x0460	; 0x800460 <sample_counter>
     5a2:	90 91 61 04 	lds	r25, 0x0461	; 0x800461 <sample_counter+0x1>
     5a6:	01 96       	adiw	r24, 0x01	; 1
     5a8:	79 f4       	brne	.+30     	; 0x5c8 <__vector_7+0x58>
     5aa:	ea e7       	ldi	r30, 0x7A	; 122
     5ac:	f0 e0       	ldi	r31, 0x00	; 0
     5ae:	80 81       	ld	r24, Z
     5b0:	80 64       	ori	r24, 0x40	; 64
     5b2:	80 83       	st	Z, r24
     5b4:	80 91 60 04 	lds	r24, 0x0460	; 0x800460 <sample_counter>
     5b8:	90 91 61 04 	lds	r25, 0x0461	; 0x800461 <sample_counter+0x1>
     5bc:	01 96       	adiw	r24, 0x01	; 1
     5be:	90 93 61 04 	sts	0x0461, r25	; 0x800461 <sample_counter+0x1>
     5c2:	80 93 60 04 	sts	0x0460, r24	; 0x800460 <sample_counter>
     5c6:	5e c0       	rjmp	.+188    	; 0x684 <__vector_7+0x114>
     5c8:	80 91 60 04 	lds	r24, 0x0460	; 0x800460 <sample_counter>
     5cc:	90 91 61 04 	lds	r25, 0x0461	; 0x800461 <sample_counter+0x1>
     5d0:	cf 97       	sbiw	r24, 0x3f	; 63
     5d2:	59 f5       	brne	.+86     	; 0x62a <__vector_7+0xba>
     5d4:	e0 91 60 04 	lds	r30, 0x0460	; 0x800460 <sample_counter>
     5d8:	f0 91 61 04 	lds	r31, 0x0461	; 0x800461 <sample_counter+0x1>
     5dc:	e0 50       	subi	r30, 0x00	; 0
     5de:	ff 4f       	sbci	r31, 0xFF	; 255
     5e0:	c0 81       	ld	r28, Z
     5e2:	d0 e0       	ldi	r29, 0x00	; 0
     5e4:	60 91 79 00 	lds	r22, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
     5e8:	70 e0       	ldi	r23, 0x00	; 0
     5ea:	60 58       	subi	r22, 0x80	; 128
     5ec:	71 09       	sbc	r23, r1
     5ee:	07 2e       	mov	r0, r23
     5f0:	00 0c       	add	r0, r0
     5f2:	88 0b       	sbc	r24, r24
     5f4:	99 0b       	sbc	r25, r25
     5f6:	0e 94 96 05 	call	0xb2c	; 0xb2c <__floatsisf>
     5fa:	cc 0f       	add	r28, r28
     5fc:	dd 1f       	adc	r29, r29
     5fe:	cc 0f       	add	r28, r28
     600:	dd 1f       	adc	r29, r29
     602:	cc 0f       	add	r28, r28
     604:	dd 1f       	adc	r29, r29
     606:	ca 58       	subi	r28, 0x8A	; 138
     608:	db 4f       	sbci	r29, 0xFB	; 251
     60a:	68 83       	st	Y, r22
     60c:	79 83       	std	Y+1, r23	; 0x01
     60e:	8a 83       	std	Y+2, r24	; 0x02
     610:	9b 83       	std	Y+3, r25	; 0x03
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	80 93 5b 04 	sts	0x045B, r24	; 0x80045b <sample_done>
     618:	0e 94 ac 02 	call	0x558	; 0x558 <timer2_stop>
     61c:	8f ef       	ldi	r24, 0xFF	; 255
     61e:	9f ef       	ldi	r25, 0xFF	; 255
     620:	90 93 61 04 	sts	0x0461, r25	; 0x800461 <sample_counter+0x1>
     624:	80 93 60 04 	sts	0x0460, r24	; 0x800460 <sample_counter>
     628:	2d c0       	rjmp	.+90     	; 0x684 <__vector_7+0x114>
     62a:	e0 91 60 04 	lds	r30, 0x0460	; 0x800460 <sample_counter>
     62e:	f0 91 61 04 	lds	r31, 0x0461	; 0x800461 <sample_counter+0x1>
     632:	e0 50       	subi	r30, 0x00	; 0
     634:	ff 4f       	sbci	r31, 0xFF	; 255
     636:	c0 81       	ld	r28, Z
     638:	d0 e0       	ldi	r29, 0x00	; 0
     63a:	60 91 79 00 	lds	r22, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
     63e:	70 e0       	ldi	r23, 0x00	; 0
     640:	60 58       	subi	r22, 0x80	; 128
     642:	71 09       	sbc	r23, r1
     644:	07 2e       	mov	r0, r23
     646:	00 0c       	add	r0, r0
     648:	88 0b       	sbc	r24, r24
     64a:	99 0b       	sbc	r25, r25
     64c:	0e 94 96 05 	call	0xb2c	; 0xb2c <__floatsisf>
     650:	cc 0f       	add	r28, r28
     652:	dd 1f       	adc	r29, r29
     654:	cc 0f       	add	r28, r28
     656:	dd 1f       	adc	r29, r29
     658:	cc 0f       	add	r28, r28
     65a:	dd 1f       	adc	r29, r29
     65c:	ca 58       	subi	r28, 0x8A	; 138
     65e:	db 4f       	sbci	r29, 0xFB	; 251
     660:	68 83       	st	Y, r22
     662:	79 83       	std	Y+1, r23	; 0x01
     664:	8a 83       	std	Y+2, r24	; 0x02
     666:	9b 83       	std	Y+3, r25	; 0x03
     668:	ea e7       	ldi	r30, 0x7A	; 122
     66a:	f0 e0       	ldi	r31, 0x00	; 0
     66c:	80 81       	ld	r24, Z
     66e:	80 64       	ori	r24, 0x40	; 64
     670:	80 83       	st	Z, r24
     672:	80 91 60 04 	lds	r24, 0x0460	; 0x800460 <sample_counter>
     676:	90 91 61 04 	lds	r25, 0x0461	; 0x800461 <sample_counter+0x1>
     67a:	01 96       	adiw	r24, 0x01	; 1
     67c:	90 93 61 04 	sts	0x0461, r25	; 0x800461 <sample_counter+0x1>
     680:	80 93 60 04 	sts	0x0460, r24	; 0x800460 <sample_counter>
     684:	ff 91       	pop	r31
     686:	ef 91       	pop	r30
     688:	df 91       	pop	r29
     68a:	cf 91       	pop	r28
     68c:	bf 91       	pop	r27
     68e:	af 91       	pop	r26
     690:	9f 91       	pop	r25
     692:	8f 91       	pop	r24
     694:	7f 91       	pop	r23
     696:	6f 91       	pop	r22
     698:	5f 91       	pop	r21
     69a:	4f 91       	pop	r20
     69c:	3f 91       	pop	r19
     69e:	2f 91       	pop	r18
     6a0:	0f 90       	pop	r0
     6a2:	0f be       	out	0x3f, r0	; 63
     6a4:	0f 90       	pop	r0
     6a6:	1f 90       	pop	r1
     6a8:	18 95       	reti

000006aa <render>:
     6aa:	cf 93       	push	r28
     6ac:	20 91 62 04 	lds	r18, 0x0462	; 0x800462 <render_timer>
     6b0:	30 91 63 04 	lds	r19, 0x0463	; 0x800463 <render_timer+0x1>
     6b4:	28 17       	cp	r18, r24
     6b6:	39 07       	cpc	r19, r25
     6b8:	10 f1       	brcs	.+68     	; 0x6fe <render+0x54>
     6ba:	10 92 63 04 	sts	0x0463, r1	; 0x800463 <render_timer+0x1>
     6be:	10 92 62 04 	sts	0x0462, r1	; 0x800462 <render_timer>
     6c2:	c0 91 4c 04 	lds	r28, 0x044C	; 0x80044c <__data_end>
     6c6:	c0 31       	cpi	r28, 0x10	; 16
     6c8:	41 f4       	brne	.+16     	; 0x6da <render+0x30>
     6ca:	6f ef       	ldi	r22, 0xFF	; 255
     6cc:	70 e0       	ldi	r23, 0x00	; 0
     6ce:	80 e0       	ldi	r24, 0x00	; 0
     6d0:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <send>
     6d4:	10 92 4c 04 	sts	0x044C, r1	; 0x80044c <__data_end>
     6d8:	12 c0       	rjmp	.+36     	; 0x6fe <render+0x54>
     6da:	ec 2f       	mov	r30, r28
     6dc:	f0 e0       	ldi	r31, 0x00	; 0
     6de:	61 e0       	ldi	r22, 0x01	; 1
     6e0:	70 e0       	ldi	r23, 0x00	; 0
     6e2:	0c 2e       	mov	r0, r28
     6e4:	02 c0       	rjmp	.+4      	; 0x6ea <render+0x40>
     6e6:	66 0f       	add	r22, r22
     6e8:	77 1f       	adc	r23, r23
     6ea:	0a 94       	dec	r0
     6ec:	e2 f7       	brpl	.-8      	; 0x6e6 <render+0x3c>
     6ee:	ea 59       	subi	r30, 0x9A	; 154
     6f0:	fb 4f       	sbci	r31, 0xFB	; 251
     6f2:	80 81       	ld	r24, Z
     6f4:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <send>
     6f8:	cf 5f       	subi	r28, 0xFF	; 255
     6fa:	c0 93 4c 04 	sts	0x044C, r28	; 0x80044c <__data_end>
     6fe:	cf 91       	pop	r28
     700:	08 95       	ret

00000702 <__vector_11>:
     702:	1f 92       	push	r1
     704:	0f 92       	push	r0
     706:	0f b6       	in	r0, 0x3f	; 63
     708:	0f 92       	push	r0
     70a:	11 24       	eor	r1, r1
     70c:	2f 93       	push	r18
     70e:	3f 93       	push	r19
     710:	4f 93       	push	r20
     712:	5f 93       	push	r21
     714:	6f 93       	push	r22
     716:	7f 93       	push	r23
     718:	8f 93       	push	r24
     71a:	9f 93       	push	r25
     71c:	af 93       	push	r26
     71e:	bf 93       	push	r27
     720:	ef 93       	push	r30
     722:	ff 93       	push	r31
     724:	80 91 62 04 	lds	r24, 0x0462	; 0x800462 <render_timer>
     728:	90 91 63 04 	lds	r25, 0x0463	; 0x800463 <render_timer+0x1>
     72c:	01 96       	adiw	r24, 0x01	; 1
     72e:	90 93 63 04 	sts	0x0463, r25	; 0x800463 <render_timer+0x1>
     732:	80 93 62 04 	sts	0x0462, r24	; 0x800462 <render_timer>
     736:	80 91 5c 04 	lds	r24, 0x045C	; 0x80045c <general_timer>
     73a:	90 91 5d 04 	lds	r25, 0x045D	; 0x80045d <general_timer+0x1>
     73e:	a0 91 5e 04 	lds	r26, 0x045E	; 0x80045e <general_timer+0x2>
     742:	b0 91 5f 04 	lds	r27, 0x045F	; 0x80045f <general_timer+0x3>
     746:	01 96       	adiw	r24, 0x01	; 1
     748:	a1 1d       	adc	r26, r1
     74a:	b1 1d       	adc	r27, r1
     74c:	80 93 5c 04 	sts	0x045C, r24	; 0x80045c <general_timer>
     750:	90 93 5d 04 	sts	0x045D, r25	; 0x80045d <general_timer+0x1>
     754:	a0 93 5e 04 	sts	0x045E, r26	; 0x80045e <general_timer+0x2>
     758:	b0 93 5f 04 	sts	0x045F, r27	; 0x80045f <general_timer+0x3>
     75c:	81 e0       	ldi	r24, 0x01	; 1
     75e:	90 e0       	ldi	r25, 0x00	; 0
     760:	0e 94 55 03 	call	0x6aa	; 0x6aa <render>
     764:	ff 91       	pop	r31
     766:	ef 91       	pop	r30
     768:	bf 91       	pop	r27
     76a:	af 91       	pop	r26
     76c:	9f 91       	pop	r25
     76e:	8f 91       	pop	r24
     770:	7f 91       	pop	r23
     772:	6f 91       	pop	r22
     774:	5f 91       	pop	r21
     776:	4f 91       	pop	r20
     778:	3f 91       	pop	r19
     77a:	2f 91       	pop	r18
     77c:	0f 90       	pop	r0
     77e:	0f be       	out	0x3f, r0	; 63
     780:	0f 90       	pop	r0
     782:	1f 90       	pop	r1
     784:	18 95       	reti

00000786 <demo>:
     786:	e6 e6       	ldi	r30, 0x66	; 102
     788:	f4 e0       	ldi	r31, 0x04	; 4
     78a:	9f ef       	ldi	r25, 0xFF	; 255
     78c:	97 87       	std	Z+15, r25	; 0x0f
     78e:	80 e9       	ldi	r24, 0x90	; 144
     790:	86 87       	std	Z+14, r24	; 0x0e
     792:	85 87       	std	Z+13, r24	; 0x0d
     794:	84 87       	std	Z+12, r24	; 0x0c
     796:	92 87       	std	Z+10, r25	; 0x0a
     798:	81 87       	std	Z+9, r24	; 0x09
     79a:	80 87       	std	Z+8, r24	; 0x08
     79c:	87 83       	std	Z+7, r24	; 0x07
     79e:	80 e8       	ldi	r24, 0x80	; 128
     7a0:	85 83       	std	Z+5, r24	; 0x05
     7a2:	84 83       	std	Z+4, r24	; 0x04
     7a4:	93 83       	std	Z+3, r25	; 0x03
     7a6:	82 83       	std	Z+2, r24	; 0x02
     7a8:	81 83       	std	Z+1, r24	; 0x01
     7aa:	08 95       	ret

000007ac <init_adc>:
     7ac:	aa e7       	ldi	r26, 0x7A	; 122
     7ae:	b0 e0       	ldi	r27, 0x00	; 0
     7b0:	8c 91       	ld	r24, X
     7b2:	85 68       	ori	r24, 0x85	; 133
     7b4:	8c 93       	st	X, r24
     7b6:	ec e7       	ldi	r30, 0x7C	; 124
     7b8:	f0 e0       	ldi	r31, 0x00	; 0
     7ba:	80 81       	ld	r24, Z
     7bc:	90 81       	ld	r25, Z
     7be:	80 7f       	andi	r24, 0xF0	; 240
     7c0:	89 2b       	or	r24, r25
     7c2:	80 83       	st	Z, r24
     7c4:	80 81       	ld	r24, Z
     7c6:	80 62       	ori	r24, 0x20	; 32
     7c8:	80 83       	st	Z, r24
     7ca:	8c 91       	ld	r24, X
     7cc:	80 64       	ori	r24, 0x40	; 64
     7ce:	8c 93       	st	X, r24
     7d0:	ea e7       	ldi	r30, 0x7A	; 122
     7d2:	f0 e0       	ldi	r31, 0x00	; 0
     7d4:	80 81       	ld	r24, Z
     7d6:	86 fd       	sbrc	r24, 6
     7d8:	fd cf       	rjmp	.-6      	; 0x7d4 <init_adc+0x28>
     7da:	08 95       	ret

000007dc <columns>:
     7dc:	dc 01       	movw	r26, r24
     7de:	50 96       	adiw	r26, 0x10	; 16
     7e0:	e6 e6       	ldi	r30, 0x66	; 102
     7e2:	f4 e0       	ldi	r31, 0x04	; 4
     7e4:	46 e7       	ldi	r20, 0x76	; 118
     7e6:	54 e0       	ldi	r21, 0x04	; 4
     7e8:	81 e0       	ldi	r24, 0x01	; 1
     7ea:	90 e0       	ldi	r25, 0x00	; 0
     7ec:	9c 01       	movw	r18, r24
     7ee:	0e 90       	ld	r0, -X
     7f0:	02 c0       	rjmp	.+4      	; 0x7f6 <columns+0x1a>
     7f2:	22 0f       	add	r18, r18
     7f4:	33 1f       	adc	r19, r19
     7f6:	0a 94       	dec	r0
     7f8:	e2 f7       	brpl	.-8      	; 0x7f2 <columns+0x16>
     7fa:	21 50       	subi	r18, 0x01	; 1
     7fc:	21 93       	st	Z+, r18
     7fe:	e4 17       	cp	r30, r20
     800:	f5 07       	cpc	r31, r21
     802:	a1 f7       	brne	.-24     	; 0x7ec <columns+0x10>
     804:	08 95       	ret

00000806 <main>:
			frame[i] = frame[i] >> 1; 
		}
	}
}
int main(){
     806:	cf 93       	push	r28
     808:	df 93       	push	r29
     80a:	cd b7       	in	r28, 0x3d	; 61
     80c:	de b7       	in	r29, 0x3e	; 62
     80e:	a4 97       	sbiw	r28, 0x24	; 36
     810:	0f b6       	in	r0, 0x3f	; 63
     812:	f8 94       	cli
     814:	de bf       	out	0x3e, r29	; 62
     816:	0f be       	out	0x3f, r0	; 63
     818:	cd bf       	out	0x3d, r28	; 61
	/*Variable initialization */
	sample_counter = -1; 	
     81a:	8f ef       	ldi	r24, 0xFF	; 255
     81c:	9f ef       	ldi	r25, 0xFF	; 255
     81e:	90 93 61 04 	sts	0x0461, r25	; 0x800461 <sample_counter+0x1>
     822:	80 93 60 04 	sts	0x0460, r24	; 0x800460 <sample_counter>
	
	/* Pin initialization */ 
    DDRB |= (1 << PB3) | (1 << PB5);
     826:	84 b1       	in	r24, 0x04	; 4
     828:	88 62       	ori	r24, 0x28	; 40
     82a:	84 b9       	out	0x04, r24	; 4
    DDRB |= ( 1 << PB2 );
     82c:	22 9a       	sbi	0x04, 2	; 4
    PORTB &= ~(1 << PB2);
     82e:	2a 98       	cbi	0x05, 2	; 5
    DDRD |=  (1 << DRCLK ) ;
     830:	56 9a       	sbi	0x0a, 6	; 10
    spi();
     832:	0e 94 61 02 	call	0x4c2	; 0x4c2 <spi>
	
		/* Render Cycle */
	demo();	
     836:	0e 94 c3 03 	call	0x786	; 0x786 <demo>
	uint8_t column_vec[16] ;
	uint8_t old_column[16] ;
	columns(column_vec);
     83a:	ce 01       	movw	r24, r28
     83c:	01 96       	adiw	r24, 0x01	; 1
     83e:	0e 94 ee 03 	call	0x7dc	; 0x7dc <columns>
	init_adc();
     842:	0e 94 d6 03 	call	0x7ac	; 0x7ac <init_adc>
	initSerial();
     846:	0e 94 1a 02 	call	0x434	; 0x434 <initSerial>
	sei();
     84a:	78 94       	sei
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     84c:	8f e9       	ldi	r24, 0x9F	; 159
     84e:	9f e0       	ldi	r25, 0x0F	; 15
     850:	01 97       	sbiw	r24, 0x01	; 1
     852:	f1 f7       	brne	.-4      	; 0x850 <main+0x4a>
     854:	00 c0       	rjmp	.+0      	; 0x856 <main+0x50>
     856:	00 00       	nop
	char buffer[20];
	_delay_ms(1);
	timer1();
     858:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <timer1>
	timer2();
     85c:	0e 94 95 02 	call	0x52a	; 0x52a <timer2>
			}
		
			uint32_t timert = general_timer;
		    fft(sample_vec);
			timert = general_timer - timert;
			sprintf(buffer,"\nFFT TOOK %d us\n",timert*100);
     860:	0f 2e       	mov	r0, r31
     862:	f8 e3       	ldi	r31, 0x38	; 56
     864:	af 2e       	mov	r10, r31
     866:	f4 e0       	ldi	r31, 0x04	; 4
     868:	bf 2e       	mov	r11, r31
     86a:	f0 2d       	mov	r31, r0
     86c:	6e 01       	movw	r12, r28
     86e:	91 e1       	ldi	r25, 0x11	; 17
     870:	c9 0e       	add	r12, r25
     872:	d1 1c       	adc	r13, r1
				smoothing =c_smooth*old_column[i] + (1-c_smooth)* magnitude(sample_vec[i]);
			//	old_column[i]  = column_vec[i];
			//	column_vec[i] = smoothing;
			}
		//	columns(column_vec);
			sample_done = 2; 
     874:	68 94       	set
     876:	77 24       	eor	r7, r7
     878:	71 f8       	bld	r7, 1
	timer2();
	float smoothing; 
	float delta; 
	float c_smooth = 0.55; 
    while(1){
			if(sample_done == 1){
     87a:	80 91 5b 04 	lds	r24, 0x045B	; 0x80045b <sample_done>
     87e:	81 30       	cpi	r24, 0x01	; 1
     880:	e1 f7       	brne	.-8      	; 0x87a <main+0x74>
     882:	0f 2e       	mov	r0, r31
     884:	f0 e0       	ldi	r31, 0x00	; 0
     886:	8f 2e       	mov	r8, r31
     888:	f1 e0       	ldi	r31, 0x01	; 1
     88a:	9f 2e       	mov	r9, r31
     88c:	f0 2d       	mov	r31, r0
     88e:	e1 2c       	mov	r14, r1
     890:	f1 2c       	mov	r15, r1
			for(int i = 0; i < N_SAMPLES; i++){
				int k = reversed[i];
     892:	d4 01       	movw	r26, r8
     894:	ed 91       	ld	r30, X+
     896:	4d 01       	movw	r8, r26
				sample_vec[i].real = hanning[k] * sample_vec[i].real;
     898:	87 01       	movw	r16, r14
     89a:	00 0f       	add	r16, r16
     89c:	11 1f       	adc	r17, r17
     89e:	00 0f       	add	r16, r16
     8a0:	11 1f       	adc	r17, r17
     8a2:	00 0f       	add	r16, r16
     8a4:	11 1f       	adc	r17, r17
     8a6:	0a 58       	subi	r16, 0x8A	; 138
     8a8:	1b 4f       	sbci	r17, 0xFB	; 251
     8aa:	d8 01       	movw	r26, r16
     8ac:	6d 91       	ld	r22, X+
     8ae:	7d 91       	ld	r23, X+
     8b0:	8d 91       	ld	r24, X+
     8b2:	9c 91       	ld	r25, X
     8b4:	f0 e0       	ldi	r31, 0x00	; 0
     8b6:	ee 0f       	add	r30, r30
     8b8:	ff 1f       	adc	r31, r31
     8ba:	ee 0f       	add	r30, r30
     8bc:	ff 1f       	adc	r31, r31
     8be:	e0 5c       	subi	r30, 0xC0	; 192
     8c0:	fe 4f       	sbci	r31, 0xFE	; 254
     8c2:	20 81       	ld	r18, Z
     8c4:	31 81       	ldd	r19, Z+1	; 0x01
     8c6:	42 81       	ldd	r20, Z+2	; 0x02
     8c8:	53 81       	ldd	r21, Z+3	; 0x03
     8ca:	0e 94 22 06 	call	0xc44	; 0xc44 <__mulsf3>
     8ce:	f8 01       	movw	r30, r16
     8d0:	60 83       	st	Z, r22
     8d2:	71 83       	std	Z+1, r23	; 0x01
     8d4:	82 83       	std	Z+2, r24	; 0x02
     8d6:	93 83       	std	Z+3, r25	; 0x03
				sample_vec[i].imag = 0; 
     8d8:	14 82       	std	Z+4, r1	; 0x04
     8da:	15 82       	std	Z+5, r1	; 0x05
     8dc:	16 82       	std	Z+6, r1	; 0x06
     8de:	17 82       	std	Z+7, r1	; 0x07
	float smoothing; 
	float delta; 
	float c_smooth = 0.55; 
    while(1){
			if(sample_done == 1){
			for(int i = 0; i < N_SAMPLES; i++){
     8e0:	bf ef       	ldi	r27, 0xFF	; 255
     8e2:	eb 1a       	sub	r14, r27
     8e4:	fb 0a       	sbc	r15, r27
     8e6:	e0 e4       	ldi	r30, 0x40	; 64
     8e8:	ee 16       	cp	r14, r30
     8ea:	f1 04       	cpc	r15, r1
     8ec:	91 f6       	brne	.-92     	; 0x892 <main+0x8c>
				int k = reversed[i];
				sample_vec[i].real = hanning[k] * sample_vec[i].real;
				sample_vec[i].imag = 0; 
			}
		
			uint32_t timert = general_timer;
     8ee:	20 90 5c 04 	lds	r2, 0x045C	; 0x80045c <general_timer>
     8f2:	30 90 5d 04 	lds	r3, 0x045D	; 0x80045d <general_timer+0x1>
     8f6:	40 90 5e 04 	lds	r4, 0x045E	; 0x80045e <general_timer+0x2>
     8fa:	50 90 5f 04 	lds	r5, 0x045F	; 0x80045f <general_timer+0x3>
		    fft(sample_vec);
     8fe:	86 e7       	ldi	r24, 0x76	; 118
     900:	94 e0       	ldi	r25, 0x04	; 4
     902:	0e 94 a4 00 	call	0x148	; 0x148 <fft>
			timert = general_timer - timert;
     906:	80 91 5c 04 	lds	r24, 0x045C	; 0x80045c <general_timer>
     90a:	90 91 5d 04 	lds	r25, 0x045D	; 0x80045d <general_timer+0x1>
     90e:	a0 91 5e 04 	lds	r26, 0x045E	; 0x80045e <general_timer+0x2>
     912:	b0 91 5f 04 	lds	r27, 0x045F	; 0x80045f <general_timer+0x3>
			sprintf(buffer,"\nFFT TOOK %d us\n",timert*100);
     916:	9c 01       	movw	r18, r24
     918:	ad 01       	movw	r20, r26
     91a:	22 19       	sub	r18, r2
     91c:	33 09       	sbc	r19, r3
     91e:	44 09       	sbc	r20, r4
     920:	55 09       	sbc	r21, r5
     922:	a4 e6       	ldi	r26, 0x64	; 100
     924:	b0 e0       	ldi	r27, 0x00	; 0
     926:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <__muluhisi3>
     92a:	9f 93       	push	r25
     92c:	8f 93       	push	r24
     92e:	7f 93       	push	r23
     930:	6f 93       	push	r22
     932:	bf 92       	push	r11
     934:	af 92       	push	r10
     936:	df 92       	push	r13
     938:	cf 92       	push	r12
     93a:	0e 94 29 07 	call	0xe52	; 0xe52 <sprintf>
			writeString(buffer);
     93e:	c6 01       	movw	r24, r12
     940:	0e 94 2e 02 	call	0x45c	; 0x45c <writeString>
     944:	0f b6       	in	r0, 0x3f	; 63
     946:	f8 94       	cli
     948:	de bf       	out	0x3e, r29	; 62
     94a:	0f be       	out	0x3f, r0	; 63
     94c:	cd bf       	out	0x3d, r28	; 61
			
			for(uint16_t i = 0; i < N_SAMPLES/2; i++){
     94e:	e1 2c       	mov	r14, r1
     950:	f1 2c       	mov	r15, r1
				writeInt(magnitude(sample_vec[i])*100);
     952:	87 01       	movw	r16, r14
     954:	00 0f       	add	r16, r16
     956:	11 1f       	adc	r17, r17
     958:	00 0f       	add	r16, r16
     95a:	11 1f       	adc	r17, r17
     95c:	00 0f       	add	r16, r16
     95e:	11 1f       	adc	r17, r17
     960:	0a 58       	subi	r16, 0x8A	; 138
     962:	1b 4f       	sbci	r17, 0xFB	; 251
     964:	d8 01       	movw	r26, r16
     966:	2c 91       	ld	r18, X
     968:	11 96       	adiw	r26, 0x01	; 1
     96a:	3c 91       	ld	r19, X
     96c:	11 97       	sbiw	r26, 0x01	; 1
     96e:	12 96       	adiw	r26, 0x02	; 2
     970:	4c 91       	ld	r20, X
     972:	12 97       	sbiw	r26, 0x02	; 2
     974:	13 96       	adiw	r26, 0x03	; 3
     976:	5c 91       	ld	r21, X
     978:	13 97       	sbiw	r26, 0x03	; 3
     97a:	14 96       	adiw	r26, 0x04	; 4
     97c:	6c 91       	ld	r22, X
     97e:	14 97       	sbiw	r26, 0x04	; 4
     980:	15 96       	adiw	r26, 0x05	; 5
     982:	7c 91       	ld	r23, X
     984:	15 97       	sbiw	r26, 0x05	; 5
     986:	16 96       	adiw	r26, 0x06	; 6
     988:	8c 91       	ld	r24, X
     98a:	16 97       	sbiw	r26, 0x06	; 6
     98c:	17 96       	adiw	r26, 0x07	; 7
     98e:	9c 91       	ld	r25, X
     990:	0e 94 53 00 	call	0xa6	; 0xa6 <magnitude>
     994:	20 e0       	ldi	r18, 0x00	; 0
     996:	30 e0       	ldi	r19, 0x00	; 0
     998:	48 ec       	ldi	r20, 0xC8	; 200
     99a:	52 e4       	ldi	r21, 0x42	; 66
     99c:	0e 94 22 06 	call	0xc44	; 0xc44 <__mulsf3>
     9a0:	0e 94 5e 05 	call	0xabc	; 0xabc <__fixsfsi>
     9a4:	cb 01       	movw	r24, r22
     9a6:	0e 94 44 02 	call	0x488	; 0x488 <writeInt>
				writeString(" ");
     9aa:	89 e4       	ldi	r24, 0x49	; 73
     9ac:	94 e0       	ldi	r25, 0x04	; 4
     9ae:	0e 94 2e 02 	call	0x45c	; 0x45c <writeString>
				smoothing =c_smooth*old_column[i] + (1-c_smooth)* magnitude(sample_vec[i]);
     9b2:	f8 01       	movw	r30, r16
     9b4:	20 81       	ld	r18, Z
     9b6:	31 81       	ldd	r19, Z+1	; 0x01
     9b8:	42 81       	ldd	r20, Z+2	; 0x02
     9ba:	53 81       	ldd	r21, Z+3	; 0x03
     9bc:	64 81       	ldd	r22, Z+4	; 0x04
     9be:	75 81       	ldd	r23, Z+5	; 0x05
     9c0:	86 81       	ldd	r24, Z+6	; 0x06
     9c2:	97 81       	ldd	r25, Z+7	; 0x07
     9c4:	0e 94 53 00 	call	0xa6	; 0xa6 <magnitude>
		    fft(sample_vec);
			timert = general_timer - timert;
			sprintf(buffer,"\nFFT TOOK %d us\n",timert*100);
			writeString(buffer);
			
			for(uint16_t i = 0; i < N_SAMPLES/2; i++){
     9c8:	ff ef       	ldi	r31, 0xFF	; 255
     9ca:	ef 1a       	sub	r14, r31
     9cc:	ff 0a       	sbc	r15, r31
     9ce:	80 e2       	ldi	r24, 0x20	; 32
     9d0:	e8 16       	cp	r14, r24
     9d2:	f1 04       	cpc	r15, r1
     9d4:	09 f0       	breq	.+2      	; 0x9d8 <__stack+0xd9>
     9d6:	bd cf       	rjmp	.-134    	; 0x952 <__stack+0x53>
				smoothing =c_smooth*old_column[i] + (1-c_smooth)* magnitude(sample_vec[i]);
			//	old_column[i]  = column_vec[i];
			//	column_vec[i] = smoothing;
			}
		//	columns(column_vec);
			sample_done = 2; 
     9d8:	70 92 5b 04 	sts	0x045B, r7	; 0x80045b <sample_done>
			timer2_start();	
     9dc:	0e 94 b2 02 	call	0x564	; 0x564 <timer2_start>
     9e0:	4c cf       	rjmp	.-360    	; 0x87a <main+0x74>

000009e2 <__subsf3>:
     9e2:	50 58       	subi	r21, 0x80	; 128

000009e4 <__addsf3>:
     9e4:	bb 27       	eor	r27, r27
     9e6:	aa 27       	eor	r26, r26
     9e8:	0e 94 09 05 	call	0xa12	; 0xa12 <__addsf3x>
     9ec:	0c 94 e8 05 	jmp	0xbd0	; 0xbd0 <__fp_round>
     9f0:	0e 94 da 05 	call	0xbb4	; 0xbb4 <__fp_pscA>
     9f4:	38 f0       	brcs	.+14     	; 0xa04 <__addsf3+0x20>
     9f6:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <__fp_pscB>
     9fa:	20 f0       	brcs	.+8      	; 0xa04 <__addsf3+0x20>
     9fc:	39 f4       	brne	.+14     	; 0xa0c <__addsf3+0x28>
     9fe:	9f 3f       	cpi	r25, 0xFF	; 255
     a00:	19 f4       	brne	.+6      	; 0xa08 <__addsf3+0x24>
     a02:	26 f4       	brtc	.+8      	; 0xa0c <__addsf3+0x28>
     a04:	0c 94 d7 05 	jmp	0xbae	; 0xbae <__fp_nan>
     a08:	0e f4       	brtc	.+2      	; 0xa0c <__addsf3+0x28>
     a0a:	e0 95       	com	r30
     a0c:	e7 fb       	bst	r30, 7
     a0e:	0c 94 d1 05 	jmp	0xba2	; 0xba2 <__fp_inf>

00000a12 <__addsf3x>:
     a12:	e9 2f       	mov	r30, r25
     a14:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <__fp_split3>
     a18:	58 f3       	brcs	.-42     	; 0x9f0 <__addsf3+0xc>
     a1a:	ba 17       	cp	r27, r26
     a1c:	62 07       	cpc	r22, r18
     a1e:	73 07       	cpc	r23, r19
     a20:	84 07       	cpc	r24, r20
     a22:	95 07       	cpc	r25, r21
     a24:	20 f0       	brcs	.+8      	; 0xa2e <__addsf3x+0x1c>
     a26:	79 f4       	brne	.+30     	; 0xa46 <__addsf3x+0x34>
     a28:	a6 f5       	brtc	.+104    	; 0xa92 <__addsf3x+0x80>
     a2a:	0c 94 1b 06 	jmp	0xc36	; 0xc36 <__fp_zero>
     a2e:	0e f4       	brtc	.+2      	; 0xa32 <__addsf3x+0x20>
     a30:	e0 95       	com	r30
     a32:	0b 2e       	mov	r0, r27
     a34:	ba 2f       	mov	r27, r26
     a36:	a0 2d       	mov	r26, r0
     a38:	0b 01       	movw	r0, r22
     a3a:	b9 01       	movw	r22, r18
     a3c:	90 01       	movw	r18, r0
     a3e:	0c 01       	movw	r0, r24
     a40:	ca 01       	movw	r24, r20
     a42:	a0 01       	movw	r20, r0
     a44:	11 24       	eor	r1, r1
     a46:	ff 27       	eor	r31, r31
     a48:	59 1b       	sub	r21, r25
     a4a:	99 f0       	breq	.+38     	; 0xa72 <__addsf3x+0x60>
     a4c:	59 3f       	cpi	r21, 0xF9	; 249
     a4e:	50 f4       	brcc	.+20     	; 0xa64 <__addsf3x+0x52>
     a50:	50 3e       	cpi	r21, 0xE0	; 224
     a52:	68 f1       	brcs	.+90     	; 0xaae <__addsf3x+0x9c>
     a54:	1a 16       	cp	r1, r26
     a56:	f0 40       	sbci	r31, 0x00	; 0
     a58:	a2 2f       	mov	r26, r18
     a5a:	23 2f       	mov	r18, r19
     a5c:	34 2f       	mov	r19, r20
     a5e:	44 27       	eor	r20, r20
     a60:	58 5f       	subi	r21, 0xF8	; 248
     a62:	f3 cf       	rjmp	.-26     	; 0xa4a <__addsf3x+0x38>
     a64:	46 95       	lsr	r20
     a66:	37 95       	ror	r19
     a68:	27 95       	ror	r18
     a6a:	a7 95       	ror	r26
     a6c:	f0 40       	sbci	r31, 0x00	; 0
     a6e:	53 95       	inc	r21
     a70:	c9 f7       	brne	.-14     	; 0xa64 <__addsf3x+0x52>
     a72:	7e f4       	brtc	.+30     	; 0xa92 <__addsf3x+0x80>
     a74:	1f 16       	cp	r1, r31
     a76:	ba 0b       	sbc	r27, r26
     a78:	62 0b       	sbc	r22, r18
     a7a:	73 0b       	sbc	r23, r19
     a7c:	84 0b       	sbc	r24, r20
     a7e:	ba f0       	brmi	.+46     	; 0xaae <__addsf3x+0x9c>
     a80:	91 50       	subi	r25, 0x01	; 1
     a82:	a1 f0       	breq	.+40     	; 0xaac <__addsf3x+0x9a>
     a84:	ff 0f       	add	r31, r31
     a86:	bb 1f       	adc	r27, r27
     a88:	66 1f       	adc	r22, r22
     a8a:	77 1f       	adc	r23, r23
     a8c:	88 1f       	adc	r24, r24
     a8e:	c2 f7       	brpl	.-16     	; 0xa80 <__addsf3x+0x6e>
     a90:	0e c0       	rjmp	.+28     	; 0xaae <__addsf3x+0x9c>
     a92:	ba 0f       	add	r27, r26
     a94:	62 1f       	adc	r22, r18
     a96:	73 1f       	adc	r23, r19
     a98:	84 1f       	adc	r24, r20
     a9a:	48 f4       	brcc	.+18     	; 0xaae <__addsf3x+0x9c>
     a9c:	87 95       	ror	r24
     a9e:	77 95       	ror	r23
     aa0:	67 95       	ror	r22
     aa2:	b7 95       	ror	r27
     aa4:	f7 95       	ror	r31
     aa6:	9e 3f       	cpi	r25, 0xFE	; 254
     aa8:	08 f0       	brcs	.+2      	; 0xaac <__addsf3x+0x9a>
     aaa:	b0 cf       	rjmp	.-160    	; 0xa0c <__addsf3+0x28>
     aac:	93 95       	inc	r25
     aae:	88 0f       	add	r24, r24
     ab0:	08 f0       	brcs	.+2      	; 0xab4 <__addsf3x+0xa2>
     ab2:	99 27       	eor	r25, r25
     ab4:	ee 0f       	add	r30, r30
     ab6:	97 95       	ror	r25
     ab8:	87 95       	ror	r24
     aba:	08 95       	ret

00000abc <__fixsfsi>:
     abc:	0e 94 65 05 	call	0xaca	; 0xaca <__fixunssfsi>
     ac0:	68 94       	set
     ac2:	b1 11       	cpse	r27, r1
     ac4:	0c 94 1c 06 	jmp	0xc38	; 0xc38 <__fp_szero>
     ac8:	08 95       	ret

00000aca <__fixunssfsi>:
     aca:	0e 94 01 06 	call	0xc02	; 0xc02 <__fp_splitA>
     ace:	88 f0       	brcs	.+34     	; 0xaf2 <__fixunssfsi+0x28>
     ad0:	9f 57       	subi	r25, 0x7F	; 127
     ad2:	98 f0       	brcs	.+38     	; 0xafa <__fixunssfsi+0x30>
     ad4:	b9 2f       	mov	r27, r25
     ad6:	99 27       	eor	r25, r25
     ad8:	b7 51       	subi	r27, 0x17	; 23
     ada:	b0 f0       	brcs	.+44     	; 0xb08 <__fixunssfsi+0x3e>
     adc:	e1 f0       	breq	.+56     	; 0xb16 <__fixunssfsi+0x4c>
     ade:	66 0f       	add	r22, r22
     ae0:	77 1f       	adc	r23, r23
     ae2:	88 1f       	adc	r24, r24
     ae4:	99 1f       	adc	r25, r25
     ae6:	1a f0       	brmi	.+6      	; 0xaee <__fixunssfsi+0x24>
     ae8:	ba 95       	dec	r27
     aea:	c9 f7       	brne	.-14     	; 0xade <__fixunssfsi+0x14>
     aec:	14 c0       	rjmp	.+40     	; 0xb16 <__fixunssfsi+0x4c>
     aee:	b1 30       	cpi	r27, 0x01	; 1
     af0:	91 f0       	breq	.+36     	; 0xb16 <__fixunssfsi+0x4c>
     af2:	0e 94 1b 06 	call	0xc36	; 0xc36 <__fp_zero>
     af6:	b1 e0       	ldi	r27, 0x01	; 1
     af8:	08 95       	ret
     afa:	0c 94 1b 06 	jmp	0xc36	; 0xc36 <__fp_zero>
     afe:	67 2f       	mov	r22, r23
     b00:	78 2f       	mov	r23, r24
     b02:	88 27       	eor	r24, r24
     b04:	b8 5f       	subi	r27, 0xF8	; 248
     b06:	39 f0       	breq	.+14     	; 0xb16 <__fixunssfsi+0x4c>
     b08:	b9 3f       	cpi	r27, 0xF9	; 249
     b0a:	cc f3       	brlt	.-14     	; 0xafe <__fixunssfsi+0x34>
     b0c:	86 95       	lsr	r24
     b0e:	77 95       	ror	r23
     b10:	67 95       	ror	r22
     b12:	b3 95       	inc	r27
     b14:	d9 f7       	brne	.-10     	; 0xb0c <__fixunssfsi+0x42>
     b16:	3e f4       	brtc	.+14     	; 0xb26 <__fixunssfsi+0x5c>
     b18:	90 95       	com	r25
     b1a:	80 95       	com	r24
     b1c:	70 95       	com	r23
     b1e:	61 95       	neg	r22
     b20:	7f 4f       	sbci	r23, 0xFF	; 255
     b22:	8f 4f       	sbci	r24, 0xFF	; 255
     b24:	9f 4f       	sbci	r25, 0xFF	; 255
     b26:	08 95       	ret

00000b28 <__floatunsisf>:
     b28:	e8 94       	clt
     b2a:	09 c0       	rjmp	.+18     	; 0xb3e <__floatsisf+0x12>

00000b2c <__floatsisf>:
     b2c:	97 fb       	bst	r25, 7
     b2e:	3e f4       	brtc	.+14     	; 0xb3e <__floatsisf+0x12>
     b30:	90 95       	com	r25
     b32:	80 95       	com	r24
     b34:	70 95       	com	r23
     b36:	61 95       	neg	r22
     b38:	7f 4f       	sbci	r23, 0xFF	; 255
     b3a:	8f 4f       	sbci	r24, 0xFF	; 255
     b3c:	9f 4f       	sbci	r25, 0xFF	; 255
     b3e:	99 23       	and	r25, r25
     b40:	a9 f0       	breq	.+42     	; 0xb6c <__floatsisf+0x40>
     b42:	f9 2f       	mov	r31, r25
     b44:	96 e9       	ldi	r25, 0x96	; 150
     b46:	bb 27       	eor	r27, r27
     b48:	93 95       	inc	r25
     b4a:	f6 95       	lsr	r31
     b4c:	87 95       	ror	r24
     b4e:	77 95       	ror	r23
     b50:	67 95       	ror	r22
     b52:	b7 95       	ror	r27
     b54:	f1 11       	cpse	r31, r1
     b56:	f8 cf       	rjmp	.-16     	; 0xb48 <__floatsisf+0x1c>
     b58:	fa f4       	brpl	.+62     	; 0xb98 <__floatsisf+0x6c>
     b5a:	bb 0f       	add	r27, r27
     b5c:	11 f4       	brne	.+4      	; 0xb62 <__floatsisf+0x36>
     b5e:	60 ff       	sbrs	r22, 0
     b60:	1b c0       	rjmp	.+54     	; 0xb98 <__floatsisf+0x6c>
     b62:	6f 5f       	subi	r22, 0xFF	; 255
     b64:	7f 4f       	sbci	r23, 0xFF	; 255
     b66:	8f 4f       	sbci	r24, 0xFF	; 255
     b68:	9f 4f       	sbci	r25, 0xFF	; 255
     b6a:	16 c0       	rjmp	.+44     	; 0xb98 <__floatsisf+0x6c>
     b6c:	88 23       	and	r24, r24
     b6e:	11 f0       	breq	.+4      	; 0xb74 <__floatsisf+0x48>
     b70:	96 e9       	ldi	r25, 0x96	; 150
     b72:	11 c0       	rjmp	.+34     	; 0xb96 <__floatsisf+0x6a>
     b74:	77 23       	and	r23, r23
     b76:	21 f0       	breq	.+8      	; 0xb80 <__floatsisf+0x54>
     b78:	9e e8       	ldi	r25, 0x8E	; 142
     b7a:	87 2f       	mov	r24, r23
     b7c:	76 2f       	mov	r23, r22
     b7e:	05 c0       	rjmp	.+10     	; 0xb8a <__floatsisf+0x5e>
     b80:	66 23       	and	r22, r22
     b82:	71 f0       	breq	.+28     	; 0xba0 <__floatsisf+0x74>
     b84:	96 e8       	ldi	r25, 0x86	; 134
     b86:	86 2f       	mov	r24, r22
     b88:	70 e0       	ldi	r23, 0x00	; 0
     b8a:	60 e0       	ldi	r22, 0x00	; 0
     b8c:	2a f0       	brmi	.+10     	; 0xb98 <__floatsisf+0x6c>
     b8e:	9a 95       	dec	r25
     b90:	66 0f       	add	r22, r22
     b92:	77 1f       	adc	r23, r23
     b94:	88 1f       	adc	r24, r24
     b96:	da f7       	brpl	.-10     	; 0xb8e <__floatsisf+0x62>
     b98:	88 0f       	add	r24, r24
     b9a:	96 95       	lsr	r25
     b9c:	87 95       	ror	r24
     b9e:	97 f9       	bld	r25, 7
     ba0:	08 95       	ret

00000ba2 <__fp_inf>:
     ba2:	97 f9       	bld	r25, 7
     ba4:	9f 67       	ori	r25, 0x7F	; 127
     ba6:	80 e8       	ldi	r24, 0x80	; 128
     ba8:	70 e0       	ldi	r23, 0x00	; 0
     baa:	60 e0       	ldi	r22, 0x00	; 0
     bac:	08 95       	ret

00000bae <__fp_nan>:
     bae:	9f ef       	ldi	r25, 0xFF	; 255
     bb0:	80 ec       	ldi	r24, 0xC0	; 192
     bb2:	08 95       	ret

00000bb4 <__fp_pscA>:
     bb4:	00 24       	eor	r0, r0
     bb6:	0a 94       	dec	r0
     bb8:	16 16       	cp	r1, r22
     bba:	17 06       	cpc	r1, r23
     bbc:	18 06       	cpc	r1, r24
     bbe:	09 06       	cpc	r0, r25
     bc0:	08 95       	ret

00000bc2 <__fp_pscB>:
     bc2:	00 24       	eor	r0, r0
     bc4:	0a 94       	dec	r0
     bc6:	12 16       	cp	r1, r18
     bc8:	13 06       	cpc	r1, r19
     bca:	14 06       	cpc	r1, r20
     bcc:	05 06       	cpc	r0, r21
     bce:	08 95       	ret

00000bd0 <__fp_round>:
     bd0:	09 2e       	mov	r0, r25
     bd2:	03 94       	inc	r0
     bd4:	00 0c       	add	r0, r0
     bd6:	11 f4       	brne	.+4      	; 0xbdc <__fp_round+0xc>
     bd8:	88 23       	and	r24, r24
     bda:	52 f0       	brmi	.+20     	; 0xbf0 <__fp_round+0x20>
     bdc:	bb 0f       	add	r27, r27
     bde:	40 f4       	brcc	.+16     	; 0xbf0 <__fp_round+0x20>
     be0:	bf 2b       	or	r27, r31
     be2:	11 f4       	brne	.+4      	; 0xbe8 <__fp_round+0x18>
     be4:	60 ff       	sbrs	r22, 0
     be6:	04 c0       	rjmp	.+8      	; 0xbf0 <__fp_round+0x20>
     be8:	6f 5f       	subi	r22, 0xFF	; 255
     bea:	7f 4f       	sbci	r23, 0xFF	; 255
     bec:	8f 4f       	sbci	r24, 0xFF	; 255
     bee:	9f 4f       	sbci	r25, 0xFF	; 255
     bf0:	08 95       	ret

00000bf2 <__fp_split3>:
     bf2:	57 fd       	sbrc	r21, 7
     bf4:	90 58       	subi	r25, 0x80	; 128
     bf6:	44 0f       	add	r20, r20
     bf8:	55 1f       	adc	r21, r21
     bfa:	59 f0       	breq	.+22     	; 0xc12 <__fp_splitA+0x10>
     bfc:	5f 3f       	cpi	r21, 0xFF	; 255
     bfe:	71 f0       	breq	.+28     	; 0xc1c <__fp_splitA+0x1a>
     c00:	47 95       	ror	r20

00000c02 <__fp_splitA>:
     c02:	88 0f       	add	r24, r24
     c04:	97 fb       	bst	r25, 7
     c06:	99 1f       	adc	r25, r25
     c08:	61 f0       	breq	.+24     	; 0xc22 <__fp_splitA+0x20>
     c0a:	9f 3f       	cpi	r25, 0xFF	; 255
     c0c:	79 f0       	breq	.+30     	; 0xc2c <__fp_splitA+0x2a>
     c0e:	87 95       	ror	r24
     c10:	08 95       	ret
     c12:	12 16       	cp	r1, r18
     c14:	13 06       	cpc	r1, r19
     c16:	14 06       	cpc	r1, r20
     c18:	55 1f       	adc	r21, r21
     c1a:	f2 cf       	rjmp	.-28     	; 0xc00 <__fp_split3+0xe>
     c1c:	46 95       	lsr	r20
     c1e:	f1 df       	rcall	.-30     	; 0xc02 <__fp_splitA>
     c20:	08 c0       	rjmp	.+16     	; 0xc32 <__fp_splitA+0x30>
     c22:	16 16       	cp	r1, r22
     c24:	17 06       	cpc	r1, r23
     c26:	18 06       	cpc	r1, r24
     c28:	99 1f       	adc	r25, r25
     c2a:	f1 cf       	rjmp	.-30     	; 0xc0e <__fp_splitA+0xc>
     c2c:	86 95       	lsr	r24
     c2e:	71 05       	cpc	r23, r1
     c30:	61 05       	cpc	r22, r1
     c32:	08 94       	sec
     c34:	08 95       	ret

00000c36 <__fp_zero>:
     c36:	e8 94       	clt

00000c38 <__fp_szero>:
     c38:	bb 27       	eor	r27, r27
     c3a:	66 27       	eor	r22, r22
     c3c:	77 27       	eor	r23, r23
     c3e:	cb 01       	movw	r24, r22
     c40:	97 f9       	bld	r25, 7
     c42:	08 95       	ret

00000c44 <__mulsf3>:
     c44:	0e 94 35 06 	call	0xc6a	; 0xc6a <__mulsf3x>
     c48:	0c 94 e8 05 	jmp	0xbd0	; 0xbd0 <__fp_round>
     c4c:	0e 94 da 05 	call	0xbb4	; 0xbb4 <__fp_pscA>
     c50:	38 f0       	brcs	.+14     	; 0xc60 <__mulsf3+0x1c>
     c52:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <__fp_pscB>
     c56:	20 f0       	brcs	.+8      	; 0xc60 <__mulsf3+0x1c>
     c58:	95 23       	and	r25, r21
     c5a:	11 f0       	breq	.+4      	; 0xc60 <__mulsf3+0x1c>
     c5c:	0c 94 d1 05 	jmp	0xba2	; 0xba2 <__fp_inf>
     c60:	0c 94 d7 05 	jmp	0xbae	; 0xbae <__fp_nan>
     c64:	11 24       	eor	r1, r1
     c66:	0c 94 1c 06 	jmp	0xc38	; 0xc38 <__fp_szero>

00000c6a <__mulsf3x>:
     c6a:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <__fp_split3>
     c6e:	70 f3       	brcs	.-36     	; 0xc4c <__mulsf3+0x8>

00000c70 <__mulsf3_pse>:
     c70:	95 9f       	mul	r25, r21
     c72:	c1 f3       	breq	.-16     	; 0xc64 <__mulsf3+0x20>
     c74:	95 0f       	add	r25, r21
     c76:	50 e0       	ldi	r21, 0x00	; 0
     c78:	55 1f       	adc	r21, r21
     c7a:	62 9f       	mul	r22, r18
     c7c:	f0 01       	movw	r30, r0
     c7e:	72 9f       	mul	r23, r18
     c80:	bb 27       	eor	r27, r27
     c82:	f0 0d       	add	r31, r0
     c84:	b1 1d       	adc	r27, r1
     c86:	63 9f       	mul	r22, r19
     c88:	aa 27       	eor	r26, r26
     c8a:	f0 0d       	add	r31, r0
     c8c:	b1 1d       	adc	r27, r1
     c8e:	aa 1f       	adc	r26, r26
     c90:	64 9f       	mul	r22, r20
     c92:	66 27       	eor	r22, r22
     c94:	b0 0d       	add	r27, r0
     c96:	a1 1d       	adc	r26, r1
     c98:	66 1f       	adc	r22, r22
     c9a:	82 9f       	mul	r24, r18
     c9c:	22 27       	eor	r18, r18
     c9e:	b0 0d       	add	r27, r0
     ca0:	a1 1d       	adc	r26, r1
     ca2:	62 1f       	adc	r22, r18
     ca4:	73 9f       	mul	r23, r19
     ca6:	b0 0d       	add	r27, r0
     ca8:	a1 1d       	adc	r26, r1
     caa:	62 1f       	adc	r22, r18
     cac:	83 9f       	mul	r24, r19
     cae:	a0 0d       	add	r26, r0
     cb0:	61 1d       	adc	r22, r1
     cb2:	22 1f       	adc	r18, r18
     cb4:	74 9f       	mul	r23, r20
     cb6:	33 27       	eor	r19, r19
     cb8:	a0 0d       	add	r26, r0
     cba:	61 1d       	adc	r22, r1
     cbc:	23 1f       	adc	r18, r19
     cbe:	84 9f       	mul	r24, r20
     cc0:	60 0d       	add	r22, r0
     cc2:	21 1d       	adc	r18, r1
     cc4:	82 2f       	mov	r24, r18
     cc6:	76 2f       	mov	r23, r22
     cc8:	6a 2f       	mov	r22, r26
     cca:	11 24       	eor	r1, r1
     ccc:	9f 57       	subi	r25, 0x7F	; 127
     cce:	50 40       	sbci	r21, 0x00	; 0
     cd0:	9a f0       	brmi	.+38     	; 0xcf8 <__mulsf3_pse+0x88>
     cd2:	f1 f0       	breq	.+60     	; 0xd10 <__mulsf3_pse+0xa0>
     cd4:	88 23       	and	r24, r24
     cd6:	4a f0       	brmi	.+18     	; 0xcea <__mulsf3_pse+0x7a>
     cd8:	ee 0f       	add	r30, r30
     cda:	ff 1f       	adc	r31, r31
     cdc:	bb 1f       	adc	r27, r27
     cde:	66 1f       	adc	r22, r22
     ce0:	77 1f       	adc	r23, r23
     ce2:	88 1f       	adc	r24, r24
     ce4:	91 50       	subi	r25, 0x01	; 1
     ce6:	50 40       	sbci	r21, 0x00	; 0
     ce8:	a9 f7       	brne	.-22     	; 0xcd4 <__mulsf3_pse+0x64>
     cea:	9e 3f       	cpi	r25, 0xFE	; 254
     cec:	51 05       	cpc	r21, r1
     cee:	80 f0       	brcs	.+32     	; 0xd10 <__mulsf3_pse+0xa0>
     cf0:	0c 94 d1 05 	jmp	0xba2	; 0xba2 <__fp_inf>
     cf4:	0c 94 1c 06 	jmp	0xc38	; 0xc38 <__fp_szero>
     cf8:	5f 3f       	cpi	r21, 0xFF	; 255
     cfa:	e4 f3       	brlt	.-8      	; 0xcf4 <__mulsf3_pse+0x84>
     cfc:	98 3e       	cpi	r25, 0xE8	; 232
     cfe:	d4 f3       	brlt	.-12     	; 0xcf4 <__mulsf3_pse+0x84>
     d00:	86 95       	lsr	r24
     d02:	77 95       	ror	r23
     d04:	67 95       	ror	r22
     d06:	b7 95       	ror	r27
     d08:	f7 95       	ror	r31
     d0a:	e7 95       	ror	r30
     d0c:	9f 5f       	subi	r25, 0xFF	; 255
     d0e:	c1 f7       	brne	.-16     	; 0xd00 <__mulsf3_pse+0x90>
     d10:	fe 2b       	or	r31, r30
     d12:	88 0f       	add	r24, r24
     d14:	91 1d       	adc	r25, r1
     d16:	96 95       	lsr	r25
     d18:	87 95       	ror	r24
     d1a:	97 f9       	bld	r25, 7
     d1c:	08 95       	ret
     d1e:	19 f4       	brne	.+6      	; 0xd26 <__mulsf3_pse+0xb6>
     d20:	16 f4       	brtc	.+4      	; 0xd26 <__mulsf3_pse+0xb6>
     d22:	0c 94 d7 05 	jmp	0xbae	; 0xbae <__fp_nan>
     d26:	0c 94 d5 06 	jmp	0xdaa	; 0xdaa <__fp_mpack>

00000d2a <sqrt>:
     d2a:	0e 94 01 06 	call	0xc02	; 0xc02 <__fp_splitA>
     d2e:	b8 f3       	brcs	.-18     	; 0xd1e <__mulsf3_pse+0xae>
     d30:	99 23       	and	r25, r25
     d32:	c9 f3       	breq	.-14     	; 0xd26 <__mulsf3_pse+0xb6>
     d34:	b6 f3       	brts	.-20     	; 0xd22 <__mulsf3_pse+0xb2>
     d36:	9f 57       	subi	r25, 0x7F	; 127
     d38:	55 0b       	sbc	r21, r21
     d3a:	87 ff       	sbrs	r24, 7
     d3c:	0e 94 e3 06 	call	0xdc6	; 0xdc6 <__fp_norm2>
     d40:	00 24       	eor	r0, r0
     d42:	a0 e6       	ldi	r26, 0x60	; 96
     d44:	40 ea       	ldi	r20, 0xA0	; 160
     d46:	90 01       	movw	r18, r0
     d48:	80 58       	subi	r24, 0x80	; 128
     d4a:	56 95       	lsr	r21
     d4c:	97 95       	ror	r25
     d4e:	28 f4       	brcc	.+10     	; 0xd5a <sqrt+0x30>
     d50:	80 5c       	subi	r24, 0xC0	; 192
     d52:	66 0f       	add	r22, r22
     d54:	77 1f       	adc	r23, r23
     d56:	88 1f       	adc	r24, r24
     d58:	20 f0       	brcs	.+8      	; 0xd62 <sqrt+0x38>
     d5a:	26 17       	cp	r18, r22
     d5c:	37 07       	cpc	r19, r23
     d5e:	48 07       	cpc	r20, r24
     d60:	30 f4       	brcc	.+12     	; 0xd6e <sqrt+0x44>
     d62:	62 1b       	sub	r22, r18
     d64:	73 0b       	sbc	r23, r19
     d66:	84 0b       	sbc	r24, r20
     d68:	20 29       	or	r18, r0
     d6a:	31 29       	or	r19, r1
     d6c:	4a 2b       	or	r20, r26
     d6e:	a6 95       	lsr	r26
     d70:	17 94       	ror	r1
     d72:	07 94       	ror	r0
     d74:	20 25       	eor	r18, r0
     d76:	31 25       	eor	r19, r1
     d78:	4a 27       	eor	r20, r26
     d7a:	58 f7       	brcc	.-42     	; 0xd52 <sqrt+0x28>
     d7c:	66 0f       	add	r22, r22
     d7e:	77 1f       	adc	r23, r23
     d80:	88 1f       	adc	r24, r24
     d82:	20 f0       	brcs	.+8      	; 0xd8c <sqrt+0x62>
     d84:	26 17       	cp	r18, r22
     d86:	37 07       	cpc	r19, r23
     d88:	48 07       	cpc	r20, r24
     d8a:	30 f4       	brcc	.+12     	; 0xd98 <sqrt+0x6e>
     d8c:	62 0b       	sbc	r22, r18
     d8e:	73 0b       	sbc	r23, r19
     d90:	84 0b       	sbc	r24, r20
     d92:	20 0d       	add	r18, r0
     d94:	31 1d       	adc	r19, r1
     d96:	41 1d       	adc	r20, r1
     d98:	a0 95       	com	r26
     d9a:	81 f7       	brne	.-32     	; 0xd7c <sqrt+0x52>
     d9c:	b9 01       	movw	r22, r18
     d9e:	84 2f       	mov	r24, r20
     da0:	91 58       	subi	r25, 0x81	; 129
     da2:	88 0f       	add	r24, r24
     da4:	96 95       	lsr	r25
     da6:	87 95       	ror	r24
     da8:	08 95       	ret

00000daa <__fp_mpack>:
     daa:	9f 3f       	cpi	r25, 0xFF	; 255
     dac:	31 f0       	breq	.+12     	; 0xdba <__fp_mpack_finite+0xc>

00000dae <__fp_mpack_finite>:
     dae:	91 50       	subi	r25, 0x01	; 1
     db0:	20 f4       	brcc	.+8      	; 0xdba <__fp_mpack_finite+0xc>
     db2:	87 95       	ror	r24
     db4:	77 95       	ror	r23
     db6:	67 95       	ror	r22
     db8:	b7 95       	ror	r27
     dba:	88 0f       	add	r24, r24
     dbc:	91 1d       	adc	r25, r1
     dbe:	96 95       	lsr	r25
     dc0:	87 95       	ror	r24
     dc2:	97 f9       	bld	r25, 7
     dc4:	08 95       	ret

00000dc6 <__fp_norm2>:
     dc6:	91 50       	subi	r25, 0x01	; 1
     dc8:	50 40       	sbci	r21, 0x00	; 0
     dca:	66 0f       	add	r22, r22
     dcc:	77 1f       	adc	r23, r23
     dce:	88 1f       	adc	r24, r24
     dd0:	d2 f7       	brpl	.-12     	; 0xdc6 <__fp_norm2>
     dd2:	08 95       	ret

00000dd4 <__muluhisi3>:
     dd4:	0e 94 f5 06 	call	0xdea	; 0xdea <__umulhisi3>
     dd8:	a5 9f       	mul	r26, r21
     dda:	90 0d       	add	r25, r0
     ddc:	b4 9f       	mul	r27, r20
     dde:	90 0d       	add	r25, r0
     de0:	a4 9f       	mul	r26, r20
     de2:	80 0d       	add	r24, r0
     de4:	91 1d       	adc	r25, r1
     de6:	11 24       	eor	r1, r1
     de8:	08 95       	ret

00000dea <__umulhisi3>:
     dea:	a2 9f       	mul	r26, r18
     dec:	b0 01       	movw	r22, r0
     dee:	b3 9f       	mul	r27, r19
     df0:	c0 01       	movw	r24, r0
     df2:	a3 9f       	mul	r26, r19
     df4:	70 0d       	add	r23, r0
     df6:	81 1d       	adc	r24, r1
     df8:	11 24       	eor	r1, r1
     dfa:	91 1d       	adc	r25, r1
     dfc:	b2 9f       	mul	r27, r18
     dfe:	70 0d       	add	r23, r0
     e00:	81 1d       	adc	r24, r1
     e02:	11 24       	eor	r1, r1
     e04:	91 1d       	adc	r25, r1
     e06:	08 95       	ret

00000e08 <__itoa_ncheck>:
     e08:	bb 27       	eor	r27, r27
     e0a:	4a 30       	cpi	r20, 0x0A	; 10
     e0c:	31 f4       	brne	.+12     	; 0xe1a <__itoa_ncheck+0x12>
     e0e:	99 23       	and	r25, r25
     e10:	22 f4       	brpl	.+8      	; 0xe1a <__itoa_ncheck+0x12>
     e12:	bd e2       	ldi	r27, 0x2D	; 45
     e14:	90 95       	com	r25
     e16:	81 95       	neg	r24
     e18:	9f 4f       	sbci	r25, 0xFF	; 255
     e1a:	0c 94 10 07 	jmp	0xe20	; 0xe20 <__utoa_common>

00000e1e <__utoa_ncheck>:
     e1e:	bb 27       	eor	r27, r27

00000e20 <__utoa_common>:
     e20:	fb 01       	movw	r30, r22
     e22:	55 27       	eor	r21, r21
     e24:	aa 27       	eor	r26, r26
     e26:	88 0f       	add	r24, r24
     e28:	99 1f       	adc	r25, r25
     e2a:	aa 1f       	adc	r26, r26
     e2c:	a4 17       	cp	r26, r20
     e2e:	10 f0       	brcs	.+4      	; 0xe34 <__utoa_common+0x14>
     e30:	a4 1b       	sub	r26, r20
     e32:	83 95       	inc	r24
     e34:	50 51       	subi	r21, 0x10	; 16
     e36:	b9 f7       	brne	.-18     	; 0xe26 <__utoa_common+0x6>
     e38:	a0 5d       	subi	r26, 0xD0	; 208
     e3a:	aa 33       	cpi	r26, 0x3A	; 58
     e3c:	08 f0       	brcs	.+2      	; 0xe40 <__utoa_common+0x20>
     e3e:	a9 5d       	subi	r26, 0xD9	; 217
     e40:	a1 93       	st	Z+, r26
     e42:	00 97       	sbiw	r24, 0x00	; 0
     e44:	79 f7       	brne	.-34     	; 0xe24 <__utoa_common+0x4>
     e46:	b1 11       	cpse	r27, r1
     e48:	b1 93       	st	Z+, r27
     e4a:	11 92       	st	Z+, r1
     e4c:	cb 01       	movw	r24, r22
     e4e:	0c 94 42 09 	jmp	0x1284	; 0x1284 <strrev>

00000e52 <sprintf>:
     e52:	ae e0       	ldi	r26, 0x0E	; 14
     e54:	b0 e0       	ldi	r27, 0x00	; 0
     e56:	ef e2       	ldi	r30, 0x2F	; 47
     e58:	f7 e0       	ldi	r31, 0x07	; 7
     e5a:	0c 94 fa 09 	jmp	0x13f4	; 0x13f4 <__prologue_saves__+0x1c>
     e5e:	0d 89       	ldd	r16, Y+21	; 0x15
     e60:	1e 89       	ldd	r17, Y+22	; 0x16
     e62:	86 e0       	ldi	r24, 0x06	; 6
     e64:	8c 83       	std	Y+4, r24	; 0x04
     e66:	1a 83       	std	Y+2, r17	; 0x02
     e68:	09 83       	std	Y+1, r16	; 0x01
     e6a:	8f ef       	ldi	r24, 0xFF	; 255
     e6c:	9f e7       	ldi	r25, 0x7F	; 127
     e6e:	9e 83       	std	Y+6, r25	; 0x06
     e70:	8d 83       	std	Y+5, r24	; 0x05
     e72:	ae 01       	movw	r20, r28
     e74:	47 5e       	subi	r20, 0xE7	; 231
     e76:	5f 4f       	sbci	r21, 0xFF	; 255
     e78:	6f 89       	ldd	r22, Y+23	; 0x17
     e7a:	78 8d       	ldd	r23, Y+24	; 0x18
     e7c:	ce 01       	movw	r24, r28
     e7e:	01 96       	adiw	r24, 0x01	; 1
     e80:	0e 94 4b 07 	call	0xe96	; 0xe96 <vfprintf>
     e84:	ef 81       	ldd	r30, Y+7	; 0x07
     e86:	f8 85       	ldd	r31, Y+8	; 0x08
     e88:	e0 0f       	add	r30, r16
     e8a:	f1 1f       	adc	r31, r17
     e8c:	10 82       	st	Z, r1
     e8e:	2e 96       	adiw	r28, 0x0e	; 14
     e90:	e4 e0       	ldi	r30, 0x04	; 4
     e92:	0c 94 16 0a 	jmp	0x142c	; 0x142c <__epilogue_restores__+0x1c>

00000e96 <vfprintf>:
     e96:	ab e0       	ldi	r26, 0x0B	; 11
     e98:	b0 e0       	ldi	r27, 0x00	; 0
     e9a:	e1 e5       	ldi	r30, 0x51	; 81
     e9c:	f7 e0       	ldi	r31, 0x07	; 7
     e9e:	0c 94 ec 09 	jmp	0x13d8	; 0x13d8 <__prologue_saves__>
     ea2:	6c 01       	movw	r12, r24
     ea4:	7b 01       	movw	r14, r22
     ea6:	8a 01       	movw	r16, r20
     ea8:	fc 01       	movw	r30, r24
     eaa:	17 82       	std	Z+7, r1	; 0x07
     eac:	16 82       	std	Z+6, r1	; 0x06
     eae:	83 81       	ldd	r24, Z+3	; 0x03
     eb0:	81 ff       	sbrs	r24, 1
     eb2:	cc c1       	rjmp	.+920    	; 0x124c <vfprintf+0x3b6>
     eb4:	ce 01       	movw	r24, r28
     eb6:	01 96       	adiw	r24, 0x01	; 1
     eb8:	3c 01       	movw	r6, r24
     eba:	f6 01       	movw	r30, r12
     ebc:	93 81       	ldd	r25, Z+3	; 0x03
     ebe:	f7 01       	movw	r30, r14
     ec0:	93 fd       	sbrc	r25, 3
     ec2:	85 91       	lpm	r24, Z+
     ec4:	93 ff       	sbrs	r25, 3
     ec6:	81 91       	ld	r24, Z+
     ec8:	7f 01       	movw	r14, r30
     eca:	88 23       	and	r24, r24
     ecc:	09 f4       	brne	.+2      	; 0xed0 <vfprintf+0x3a>
     ece:	ba c1       	rjmp	.+884    	; 0x1244 <vfprintf+0x3ae>
     ed0:	85 32       	cpi	r24, 0x25	; 37
     ed2:	39 f4       	brne	.+14     	; 0xee2 <vfprintf+0x4c>
     ed4:	93 fd       	sbrc	r25, 3
     ed6:	85 91       	lpm	r24, Z+
     ed8:	93 ff       	sbrs	r25, 3
     eda:	81 91       	ld	r24, Z+
     edc:	7f 01       	movw	r14, r30
     ede:	85 32       	cpi	r24, 0x25	; 37
     ee0:	29 f4       	brne	.+10     	; 0xeec <vfprintf+0x56>
     ee2:	b6 01       	movw	r22, r12
     ee4:	90 e0       	ldi	r25, 0x00	; 0
     ee6:	0e 94 52 09 	call	0x12a4	; 0x12a4 <fputc>
     eea:	e7 cf       	rjmp	.-50     	; 0xeba <vfprintf+0x24>
     eec:	91 2c       	mov	r9, r1
     eee:	21 2c       	mov	r2, r1
     ef0:	31 2c       	mov	r3, r1
     ef2:	ff e1       	ldi	r31, 0x1F	; 31
     ef4:	f3 15       	cp	r31, r3
     ef6:	d8 f0       	brcs	.+54     	; 0xf2e <vfprintf+0x98>
     ef8:	8b 32       	cpi	r24, 0x2B	; 43
     efa:	79 f0       	breq	.+30     	; 0xf1a <vfprintf+0x84>
     efc:	38 f4       	brcc	.+14     	; 0xf0c <vfprintf+0x76>
     efe:	80 32       	cpi	r24, 0x20	; 32
     f00:	79 f0       	breq	.+30     	; 0xf20 <vfprintf+0x8a>
     f02:	83 32       	cpi	r24, 0x23	; 35
     f04:	a1 f4       	brne	.+40     	; 0xf2e <vfprintf+0x98>
     f06:	23 2d       	mov	r18, r3
     f08:	20 61       	ori	r18, 0x10	; 16
     f0a:	1d c0       	rjmp	.+58     	; 0xf46 <vfprintf+0xb0>
     f0c:	8d 32       	cpi	r24, 0x2D	; 45
     f0e:	61 f0       	breq	.+24     	; 0xf28 <vfprintf+0x92>
     f10:	80 33       	cpi	r24, 0x30	; 48
     f12:	69 f4       	brne	.+26     	; 0xf2e <vfprintf+0x98>
     f14:	23 2d       	mov	r18, r3
     f16:	21 60       	ori	r18, 0x01	; 1
     f18:	16 c0       	rjmp	.+44     	; 0xf46 <vfprintf+0xb0>
     f1a:	83 2d       	mov	r24, r3
     f1c:	82 60       	ori	r24, 0x02	; 2
     f1e:	38 2e       	mov	r3, r24
     f20:	e3 2d       	mov	r30, r3
     f22:	e4 60       	ori	r30, 0x04	; 4
     f24:	3e 2e       	mov	r3, r30
     f26:	2a c0       	rjmp	.+84     	; 0xf7c <vfprintf+0xe6>
     f28:	f3 2d       	mov	r31, r3
     f2a:	f8 60       	ori	r31, 0x08	; 8
     f2c:	1d c0       	rjmp	.+58     	; 0xf68 <vfprintf+0xd2>
     f2e:	37 fc       	sbrc	r3, 7
     f30:	2d c0       	rjmp	.+90     	; 0xf8c <vfprintf+0xf6>
     f32:	20 ed       	ldi	r18, 0xD0	; 208
     f34:	28 0f       	add	r18, r24
     f36:	2a 30       	cpi	r18, 0x0A	; 10
     f38:	40 f0       	brcs	.+16     	; 0xf4a <vfprintf+0xb4>
     f3a:	8e 32       	cpi	r24, 0x2E	; 46
     f3c:	b9 f4       	brne	.+46     	; 0xf6c <vfprintf+0xd6>
     f3e:	36 fc       	sbrc	r3, 6
     f40:	81 c1       	rjmp	.+770    	; 0x1244 <vfprintf+0x3ae>
     f42:	23 2d       	mov	r18, r3
     f44:	20 64       	ori	r18, 0x40	; 64
     f46:	32 2e       	mov	r3, r18
     f48:	19 c0       	rjmp	.+50     	; 0xf7c <vfprintf+0xe6>
     f4a:	36 fe       	sbrs	r3, 6
     f4c:	06 c0       	rjmp	.+12     	; 0xf5a <vfprintf+0xc4>
     f4e:	8a e0       	ldi	r24, 0x0A	; 10
     f50:	98 9e       	mul	r9, r24
     f52:	20 0d       	add	r18, r0
     f54:	11 24       	eor	r1, r1
     f56:	92 2e       	mov	r9, r18
     f58:	11 c0       	rjmp	.+34     	; 0xf7c <vfprintf+0xe6>
     f5a:	ea e0       	ldi	r30, 0x0A	; 10
     f5c:	2e 9e       	mul	r2, r30
     f5e:	20 0d       	add	r18, r0
     f60:	11 24       	eor	r1, r1
     f62:	22 2e       	mov	r2, r18
     f64:	f3 2d       	mov	r31, r3
     f66:	f0 62       	ori	r31, 0x20	; 32
     f68:	3f 2e       	mov	r3, r31
     f6a:	08 c0       	rjmp	.+16     	; 0xf7c <vfprintf+0xe6>
     f6c:	8c 36       	cpi	r24, 0x6C	; 108
     f6e:	21 f4       	brne	.+8      	; 0xf78 <vfprintf+0xe2>
     f70:	83 2d       	mov	r24, r3
     f72:	80 68       	ori	r24, 0x80	; 128
     f74:	38 2e       	mov	r3, r24
     f76:	02 c0       	rjmp	.+4      	; 0xf7c <vfprintf+0xe6>
     f78:	88 36       	cpi	r24, 0x68	; 104
     f7a:	41 f4       	brne	.+16     	; 0xf8c <vfprintf+0xf6>
     f7c:	f7 01       	movw	r30, r14
     f7e:	93 fd       	sbrc	r25, 3
     f80:	85 91       	lpm	r24, Z+
     f82:	93 ff       	sbrs	r25, 3
     f84:	81 91       	ld	r24, Z+
     f86:	7f 01       	movw	r14, r30
     f88:	81 11       	cpse	r24, r1
     f8a:	b3 cf       	rjmp	.-154    	; 0xef2 <vfprintf+0x5c>
     f8c:	98 2f       	mov	r25, r24
     f8e:	9f 7d       	andi	r25, 0xDF	; 223
     f90:	95 54       	subi	r25, 0x45	; 69
     f92:	93 30       	cpi	r25, 0x03	; 3
     f94:	28 f4       	brcc	.+10     	; 0xfa0 <vfprintf+0x10a>
     f96:	0c 5f       	subi	r16, 0xFC	; 252
     f98:	1f 4f       	sbci	r17, 0xFF	; 255
     f9a:	9f e3       	ldi	r25, 0x3F	; 63
     f9c:	99 83       	std	Y+1, r25	; 0x01
     f9e:	0d c0       	rjmp	.+26     	; 0xfba <vfprintf+0x124>
     fa0:	83 36       	cpi	r24, 0x63	; 99
     fa2:	31 f0       	breq	.+12     	; 0xfb0 <vfprintf+0x11a>
     fa4:	83 37       	cpi	r24, 0x73	; 115
     fa6:	71 f0       	breq	.+28     	; 0xfc4 <vfprintf+0x12e>
     fa8:	83 35       	cpi	r24, 0x53	; 83
     faa:	09 f0       	breq	.+2      	; 0xfae <vfprintf+0x118>
     fac:	59 c0       	rjmp	.+178    	; 0x1060 <vfprintf+0x1ca>
     fae:	21 c0       	rjmp	.+66     	; 0xff2 <vfprintf+0x15c>
     fb0:	f8 01       	movw	r30, r16
     fb2:	80 81       	ld	r24, Z
     fb4:	89 83       	std	Y+1, r24	; 0x01
     fb6:	0e 5f       	subi	r16, 0xFE	; 254
     fb8:	1f 4f       	sbci	r17, 0xFF	; 255
     fba:	88 24       	eor	r8, r8
     fbc:	83 94       	inc	r8
     fbe:	91 2c       	mov	r9, r1
     fc0:	53 01       	movw	r10, r6
     fc2:	13 c0       	rjmp	.+38     	; 0xfea <vfprintf+0x154>
     fc4:	28 01       	movw	r4, r16
     fc6:	f2 e0       	ldi	r31, 0x02	; 2
     fc8:	4f 0e       	add	r4, r31
     fca:	51 1c       	adc	r5, r1
     fcc:	f8 01       	movw	r30, r16
     fce:	a0 80       	ld	r10, Z
     fd0:	b1 80       	ldd	r11, Z+1	; 0x01
     fd2:	36 fe       	sbrs	r3, 6
     fd4:	03 c0       	rjmp	.+6      	; 0xfdc <vfprintf+0x146>
     fd6:	69 2d       	mov	r22, r9
     fd8:	70 e0       	ldi	r23, 0x00	; 0
     fda:	02 c0       	rjmp	.+4      	; 0xfe0 <vfprintf+0x14a>
     fdc:	6f ef       	ldi	r22, 0xFF	; 255
     fde:	7f ef       	ldi	r23, 0xFF	; 255
     fe0:	c5 01       	movw	r24, r10
     fe2:	0e 94 37 09 	call	0x126e	; 0x126e <strnlen>
     fe6:	4c 01       	movw	r8, r24
     fe8:	82 01       	movw	r16, r4
     fea:	f3 2d       	mov	r31, r3
     fec:	ff 77       	andi	r31, 0x7F	; 127
     fee:	3f 2e       	mov	r3, r31
     ff0:	16 c0       	rjmp	.+44     	; 0x101e <vfprintf+0x188>
     ff2:	28 01       	movw	r4, r16
     ff4:	22 e0       	ldi	r18, 0x02	; 2
     ff6:	42 0e       	add	r4, r18
     ff8:	51 1c       	adc	r5, r1
     ffa:	f8 01       	movw	r30, r16
     ffc:	a0 80       	ld	r10, Z
     ffe:	b1 80       	ldd	r11, Z+1	; 0x01
    1000:	36 fe       	sbrs	r3, 6
    1002:	03 c0       	rjmp	.+6      	; 0x100a <vfprintf+0x174>
    1004:	69 2d       	mov	r22, r9
    1006:	70 e0       	ldi	r23, 0x00	; 0
    1008:	02 c0       	rjmp	.+4      	; 0x100e <vfprintf+0x178>
    100a:	6f ef       	ldi	r22, 0xFF	; 255
    100c:	7f ef       	ldi	r23, 0xFF	; 255
    100e:	c5 01       	movw	r24, r10
    1010:	0e 94 2c 09 	call	0x1258	; 0x1258 <strnlen_P>
    1014:	4c 01       	movw	r8, r24
    1016:	f3 2d       	mov	r31, r3
    1018:	f0 68       	ori	r31, 0x80	; 128
    101a:	3f 2e       	mov	r3, r31
    101c:	82 01       	movw	r16, r4
    101e:	33 fc       	sbrc	r3, 3
    1020:	1b c0       	rjmp	.+54     	; 0x1058 <vfprintf+0x1c2>
    1022:	82 2d       	mov	r24, r2
    1024:	90 e0       	ldi	r25, 0x00	; 0
    1026:	88 16       	cp	r8, r24
    1028:	99 06       	cpc	r9, r25
    102a:	b0 f4       	brcc	.+44     	; 0x1058 <vfprintf+0x1c2>
    102c:	b6 01       	movw	r22, r12
    102e:	80 e2       	ldi	r24, 0x20	; 32
    1030:	90 e0       	ldi	r25, 0x00	; 0
    1032:	0e 94 52 09 	call	0x12a4	; 0x12a4 <fputc>
    1036:	2a 94       	dec	r2
    1038:	f4 cf       	rjmp	.-24     	; 0x1022 <vfprintf+0x18c>
    103a:	f5 01       	movw	r30, r10
    103c:	37 fc       	sbrc	r3, 7
    103e:	85 91       	lpm	r24, Z+
    1040:	37 fe       	sbrs	r3, 7
    1042:	81 91       	ld	r24, Z+
    1044:	5f 01       	movw	r10, r30
    1046:	b6 01       	movw	r22, r12
    1048:	90 e0       	ldi	r25, 0x00	; 0
    104a:	0e 94 52 09 	call	0x12a4	; 0x12a4 <fputc>
    104e:	21 10       	cpse	r2, r1
    1050:	2a 94       	dec	r2
    1052:	21 e0       	ldi	r18, 0x01	; 1
    1054:	82 1a       	sub	r8, r18
    1056:	91 08       	sbc	r9, r1
    1058:	81 14       	cp	r8, r1
    105a:	91 04       	cpc	r9, r1
    105c:	71 f7       	brne	.-36     	; 0x103a <vfprintf+0x1a4>
    105e:	e8 c0       	rjmp	.+464    	; 0x1230 <vfprintf+0x39a>
    1060:	84 36       	cpi	r24, 0x64	; 100
    1062:	11 f0       	breq	.+4      	; 0x1068 <vfprintf+0x1d2>
    1064:	89 36       	cpi	r24, 0x69	; 105
    1066:	41 f5       	brne	.+80     	; 0x10b8 <vfprintf+0x222>
    1068:	f8 01       	movw	r30, r16
    106a:	37 fe       	sbrs	r3, 7
    106c:	07 c0       	rjmp	.+14     	; 0x107c <vfprintf+0x1e6>
    106e:	60 81       	ld	r22, Z
    1070:	71 81       	ldd	r23, Z+1	; 0x01
    1072:	82 81       	ldd	r24, Z+2	; 0x02
    1074:	93 81       	ldd	r25, Z+3	; 0x03
    1076:	0c 5f       	subi	r16, 0xFC	; 252
    1078:	1f 4f       	sbci	r17, 0xFF	; 255
    107a:	08 c0       	rjmp	.+16     	; 0x108c <vfprintf+0x1f6>
    107c:	60 81       	ld	r22, Z
    107e:	71 81       	ldd	r23, Z+1	; 0x01
    1080:	07 2e       	mov	r0, r23
    1082:	00 0c       	add	r0, r0
    1084:	88 0b       	sbc	r24, r24
    1086:	99 0b       	sbc	r25, r25
    1088:	0e 5f       	subi	r16, 0xFE	; 254
    108a:	1f 4f       	sbci	r17, 0xFF	; 255
    108c:	f3 2d       	mov	r31, r3
    108e:	ff 76       	andi	r31, 0x6F	; 111
    1090:	3f 2e       	mov	r3, r31
    1092:	97 ff       	sbrs	r25, 7
    1094:	09 c0       	rjmp	.+18     	; 0x10a8 <vfprintf+0x212>
    1096:	90 95       	com	r25
    1098:	80 95       	com	r24
    109a:	70 95       	com	r23
    109c:	61 95       	neg	r22
    109e:	7f 4f       	sbci	r23, 0xFF	; 255
    10a0:	8f 4f       	sbci	r24, 0xFF	; 255
    10a2:	9f 4f       	sbci	r25, 0xFF	; 255
    10a4:	f0 68       	ori	r31, 0x80	; 128
    10a6:	3f 2e       	mov	r3, r31
    10a8:	2a e0       	ldi	r18, 0x0A	; 10
    10aa:	30 e0       	ldi	r19, 0x00	; 0
    10ac:	a3 01       	movw	r20, r6
    10ae:	0e 94 8e 09 	call	0x131c	; 0x131c <__ultoa_invert>
    10b2:	88 2e       	mov	r8, r24
    10b4:	86 18       	sub	r8, r6
    10b6:	45 c0       	rjmp	.+138    	; 0x1142 <vfprintf+0x2ac>
    10b8:	85 37       	cpi	r24, 0x75	; 117
    10ba:	31 f4       	brne	.+12     	; 0x10c8 <vfprintf+0x232>
    10bc:	23 2d       	mov	r18, r3
    10be:	2f 7e       	andi	r18, 0xEF	; 239
    10c0:	b2 2e       	mov	r11, r18
    10c2:	2a e0       	ldi	r18, 0x0A	; 10
    10c4:	30 e0       	ldi	r19, 0x00	; 0
    10c6:	25 c0       	rjmp	.+74     	; 0x1112 <vfprintf+0x27c>
    10c8:	93 2d       	mov	r25, r3
    10ca:	99 7f       	andi	r25, 0xF9	; 249
    10cc:	b9 2e       	mov	r11, r25
    10ce:	8f 36       	cpi	r24, 0x6F	; 111
    10d0:	c1 f0       	breq	.+48     	; 0x1102 <vfprintf+0x26c>
    10d2:	18 f4       	brcc	.+6      	; 0x10da <vfprintf+0x244>
    10d4:	88 35       	cpi	r24, 0x58	; 88
    10d6:	79 f0       	breq	.+30     	; 0x10f6 <vfprintf+0x260>
    10d8:	b5 c0       	rjmp	.+362    	; 0x1244 <vfprintf+0x3ae>
    10da:	80 37       	cpi	r24, 0x70	; 112
    10dc:	19 f0       	breq	.+6      	; 0x10e4 <vfprintf+0x24e>
    10de:	88 37       	cpi	r24, 0x78	; 120
    10e0:	21 f0       	breq	.+8      	; 0x10ea <vfprintf+0x254>
    10e2:	b0 c0       	rjmp	.+352    	; 0x1244 <vfprintf+0x3ae>
    10e4:	e9 2f       	mov	r30, r25
    10e6:	e0 61       	ori	r30, 0x10	; 16
    10e8:	be 2e       	mov	r11, r30
    10ea:	b4 fe       	sbrs	r11, 4
    10ec:	0d c0       	rjmp	.+26     	; 0x1108 <vfprintf+0x272>
    10ee:	fb 2d       	mov	r31, r11
    10f0:	f4 60       	ori	r31, 0x04	; 4
    10f2:	bf 2e       	mov	r11, r31
    10f4:	09 c0       	rjmp	.+18     	; 0x1108 <vfprintf+0x272>
    10f6:	34 fe       	sbrs	r3, 4
    10f8:	0a c0       	rjmp	.+20     	; 0x110e <vfprintf+0x278>
    10fa:	29 2f       	mov	r18, r25
    10fc:	26 60       	ori	r18, 0x06	; 6
    10fe:	b2 2e       	mov	r11, r18
    1100:	06 c0       	rjmp	.+12     	; 0x110e <vfprintf+0x278>
    1102:	28 e0       	ldi	r18, 0x08	; 8
    1104:	30 e0       	ldi	r19, 0x00	; 0
    1106:	05 c0       	rjmp	.+10     	; 0x1112 <vfprintf+0x27c>
    1108:	20 e1       	ldi	r18, 0x10	; 16
    110a:	30 e0       	ldi	r19, 0x00	; 0
    110c:	02 c0       	rjmp	.+4      	; 0x1112 <vfprintf+0x27c>
    110e:	20 e1       	ldi	r18, 0x10	; 16
    1110:	32 e0       	ldi	r19, 0x02	; 2
    1112:	f8 01       	movw	r30, r16
    1114:	b7 fe       	sbrs	r11, 7
    1116:	07 c0       	rjmp	.+14     	; 0x1126 <vfprintf+0x290>
    1118:	60 81       	ld	r22, Z
    111a:	71 81       	ldd	r23, Z+1	; 0x01
    111c:	82 81       	ldd	r24, Z+2	; 0x02
    111e:	93 81       	ldd	r25, Z+3	; 0x03
    1120:	0c 5f       	subi	r16, 0xFC	; 252
    1122:	1f 4f       	sbci	r17, 0xFF	; 255
    1124:	06 c0       	rjmp	.+12     	; 0x1132 <vfprintf+0x29c>
    1126:	60 81       	ld	r22, Z
    1128:	71 81       	ldd	r23, Z+1	; 0x01
    112a:	80 e0       	ldi	r24, 0x00	; 0
    112c:	90 e0       	ldi	r25, 0x00	; 0
    112e:	0e 5f       	subi	r16, 0xFE	; 254
    1130:	1f 4f       	sbci	r17, 0xFF	; 255
    1132:	a3 01       	movw	r20, r6
    1134:	0e 94 8e 09 	call	0x131c	; 0x131c <__ultoa_invert>
    1138:	88 2e       	mov	r8, r24
    113a:	86 18       	sub	r8, r6
    113c:	fb 2d       	mov	r31, r11
    113e:	ff 77       	andi	r31, 0x7F	; 127
    1140:	3f 2e       	mov	r3, r31
    1142:	36 fe       	sbrs	r3, 6
    1144:	0d c0       	rjmp	.+26     	; 0x1160 <vfprintf+0x2ca>
    1146:	23 2d       	mov	r18, r3
    1148:	2e 7f       	andi	r18, 0xFE	; 254
    114a:	a2 2e       	mov	r10, r18
    114c:	89 14       	cp	r8, r9
    114e:	58 f4       	brcc	.+22     	; 0x1166 <vfprintf+0x2d0>
    1150:	34 fe       	sbrs	r3, 4
    1152:	0b c0       	rjmp	.+22     	; 0x116a <vfprintf+0x2d4>
    1154:	32 fc       	sbrc	r3, 2
    1156:	09 c0       	rjmp	.+18     	; 0x116a <vfprintf+0x2d4>
    1158:	83 2d       	mov	r24, r3
    115a:	8e 7e       	andi	r24, 0xEE	; 238
    115c:	a8 2e       	mov	r10, r24
    115e:	05 c0       	rjmp	.+10     	; 0x116a <vfprintf+0x2d4>
    1160:	b8 2c       	mov	r11, r8
    1162:	a3 2c       	mov	r10, r3
    1164:	03 c0       	rjmp	.+6      	; 0x116c <vfprintf+0x2d6>
    1166:	b8 2c       	mov	r11, r8
    1168:	01 c0       	rjmp	.+2      	; 0x116c <vfprintf+0x2d6>
    116a:	b9 2c       	mov	r11, r9
    116c:	a4 fe       	sbrs	r10, 4
    116e:	0f c0       	rjmp	.+30     	; 0x118e <vfprintf+0x2f8>
    1170:	fe 01       	movw	r30, r28
    1172:	e8 0d       	add	r30, r8
    1174:	f1 1d       	adc	r31, r1
    1176:	80 81       	ld	r24, Z
    1178:	80 33       	cpi	r24, 0x30	; 48
    117a:	21 f4       	brne	.+8      	; 0x1184 <vfprintf+0x2ee>
    117c:	9a 2d       	mov	r25, r10
    117e:	99 7e       	andi	r25, 0xE9	; 233
    1180:	a9 2e       	mov	r10, r25
    1182:	09 c0       	rjmp	.+18     	; 0x1196 <vfprintf+0x300>
    1184:	a2 fe       	sbrs	r10, 2
    1186:	06 c0       	rjmp	.+12     	; 0x1194 <vfprintf+0x2fe>
    1188:	b3 94       	inc	r11
    118a:	b3 94       	inc	r11
    118c:	04 c0       	rjmp	.+8      	; 0x1196 <vfprintf+0x300>
    118e:	8a 2d       	mov	r24, r10
    1190:	86 78       	andi	r24, 0x86	; 134
    1192:	09 f0       	breq	.+2      	; 0x1196 <vfprintf+0x300>
    1194:	b3 94       	inc	r11
    1196:	a3 fc       	sbrc	r10, 3
    1198:	11 c0       	rjmp	.+34     	; 0x11bc <vfprintf+0x326>
    119a:	a0 fe       	sbrs	r10, 0
    119c:	06 c0       	rjmp	.+12     	; 0x11aa <vfprintf+0x314>
    119e:	b2 14       	cp	r11, r2
    11a0:	88 f4       	brcc	.+34     	; 0x11c4 <vfprintf+0x32e>
    11a2:	28 0c       	add	r2, r8
    11a4:	92 2c       	mov	r9, r2
    11a6:	9b 18       	sub	r9, r11
    11a8:	0e c0       	rjmp	.+28     	; 0x11c6 <vfprintf+0x330>
    11aa:	b2 14       	cp	r11, r2
    11ac:	60 f4       	brcc	.+24     	; 0x11c6 <vfprintf+0x330>
    11ae:	b6 01       	movw	r22, r12
    11b0:	80 e2       	ldi	r24, 0x20	; 32
    11b2:	90 e0       	ldi	r25, 0x00	; 0
    11b4:	0e 94 52 09 	call	0x12a4	; 0x12a4 <fputc>
    11b8:	b3 94       	inc	r11
    11ba:	f7 cf       	rjmp	.-18     	; 0x11aa <vfprintf+0x314>
    11bc:	b2 14       	cp	r11, r2
    11be:	18 f4       	brcc	.+6      	; 0x11c6 <vfprintf+0x330>
    11c0:	2b 18       	sub	r2, r11
    11c2:	02 c0       	rjmp	.+4      	; 0x11c8 <vfprintf+0x332>
    11c4:	98 2c       	mov	r9, r8
    11c6:	21 2c       	mov	r2, r1
    11c8:	a4 fe       	sbrs	r10, 4
    11ca:	10 c0       	rjmp	.+32     	; 0x11ec <vfprintf+0x356>
    11cc:	b6 01       	movw	r22, r12
    11ce:	80 e3       	ldi	r24, 0x30	; 48
    11d0:	90 e0       	ldi	r25, 0x00	; 0
    11d2:	0e 94 52 09 	call	0x12a4	; 0x12a4 <fputc>
    11d6:	a2 fe       	sbrs	r10, 2
    11d8:	17 c0       	rjmp	.+46     	; 0x1208 <vfprintf+0x372>
    11da:	a1 fc       	sbrc	r10, 1
    11dc:	03 c0       	rjmp	.+6      	; 0x11e4 <vfprintf+0x34e>
    11de:	88 e7       	ldi	r24, 0x78	; 120
    11e0:	90 e0       	ldi	r25, 0x00	; 0
    11e2:	02 c0       	rjmp	.+4      	; 0x11e8 <vfprintf+0x352>
    11e4:	88 e5       	ldi	r24, 0x58	; 88
    11e6:	90 e0       	ldi	r25, 0x00	; 0
    11e8:	b6 01       	movw	r22, r12
    11ea:	0c c0       	rjmp	.+24     	; 0x1204 <vfprintf+0x36e>
    11ec:	8a 2d       	mov	r24, r10
    11ee:	86 78       	andi	r24, 0x86	; 134
    11f0:	59 f0       	breq	.+22     	; 0x1208 <vfprintf+0x372>
    11f2:	a1 fe       	sbrs	r10, 1
    11f4:	02 c0       	rjmp	.+4      	; 0x11fa <vfprintf+0x364>
    11f6:	8b e2       	ldi	r24, 0x2B	; 43
    11f8:	01 c0       	rjmp	.+2      	; 0x11fc <vfprintf+0x366>
    11fa:	80 e2       	ldi	r24, 0x20	; 32
    11fc:	a7 fc       	sbrc	r10, 7
    11fe:	8d e2       	ldi	r24, 0x2D	; 45
    1200:	b6 01       	movw	r22, r12
    1202:	90 e0       	ldi	r25, 0x00	; 0
    1204:	0e 94 52 09 	call	0x12a4	; 0x12a4 <fputc>
    1208:	89 14       	cp	r8, r9
    120a:	38 f4       	brcc	.+14     	; 0x121a <vfprintf+0x384>
    120c:	b6 01       	movw	r22, r12
    120e:	80 e3       	ldi	r24, 0x30	; 48
    1210:	90 e0       	ldi	r25, 0x00	; 0
    1212:	0e 94 52 09 	call	0x12a4	; 0x12a4 <fputc>
    1216:	9a 94       	dec	r9
    1218:	f7 cf       	rjmp	.-18     	; 0x1208 <vfprintf+0x372>
    121a:	8a 94       	dec	r8
    121c:	f3 01       	movw	r30, r6
    121e:	e8 0d       	add	r30, r8
    1220:	f1 1d       	adc	r31, r1
    1222:	80 81       	ld	r24, Z
    1224:	b6 01       	movw	r22, r12
    1226:	90 e0       	ldi	r25, 0x00	; 0
    1228:	0e 94 52 09 	call	0x12a4	; 0x12a4 <fputc>
    122c:	81 10       	cpse	r8, r1
    122e:	f5 cf       	rjmp	.-22     	; 0x121a <vfprintf+0x384>
    1230:	22 20       	and	r2, r2
    1232:	09 f4       	brne	.+2      	; 0x1236 <vfprintf+0x3a0>
    1234:	42 ce       	rjmp	.-892    	; 0xeba <vfprintf+0x24>
    1236:	b6 01       	movw	r22, r12
    1238:	80 e2       	ldi	r24, 0x20	; 32
    123a:	90 e0       	ldi	r25, 0x00	; 0
    123c:	0e 94 52 09 	call	0x12a4	; 0x12a4 <fputc>
    1240:	2a 94       	dec	r2
    1242:	f6 cf       	rjmp	.-20     	; 0x1230 <vfprintf+0x39a>
    1244:	f6 01       	movw	r30, r12
    1246:	86 81       	ldd	r24, Z+6	; 0x06
    1248:	97 81       	ldd	r25, Z+7	; 0x07
    124a:	02 c0       	rjmp	.+4      	; 0x1250 <vfprintf+0x3ba>
    124c:	8f ef       	ldi	r24, 0xFF	; 255
    124e:	9f ef       	ldi	r25, 0xFF	; 255
    1250:	2b 96       	adiw	r28, 0x0b	; 11
    1252:	e2 e1       	ldi	r30, 0x12	; 18
    1254:	0c 94 08 0a 	jmp	0x1410	; 0x1410 <__epilogue_restores__>

00001258 <strnlen_P>:
    1258:	fc 01       	movw	r30, r24
    125a:	05 90       	lpm	r0, Z+
    125c:	61 50       	subi	r22, 0x01	; 1
    125e:	70 40       	sbci	r23, 0x00	; 0
    1260:	01 10       	cpse	r0, r1
    1262:	d8 f7       	brcc	.-10     	; 0x125a <strnlen_P+0x2>
    1264:	80 95       	com	r24
    1266:	90 95       	com	r25
    1268:	8e 0f       	add	r24, r30
    126a:	9f 1f       	adc	r25, r31
    126c:	08 95       	ret

0000126e <strnlen>:
    126e:	fc 01       	movw	r30, r24
    1270:	61 50       	subi	r22, 0x01	; 1
    1272:	70 40       	sbci	r23, 0x00	; 0
    1274:	01 90       	ld	r0, Z+
    1276:	01 10       	cpse	r0, r1
    1278:	d8 f7       	brcc	.-10     	; 0x1270 <strnlen+0x2>
    127a:	80 95       	com	r24
    127c:	90 95       	com	r25
    127e:	8e 0f       	add	r24, r30
    1280:	9f 1f       	adc	r25, r31
    1282:	08 95       	ret

00001284 <strrev>:
    1284:	dc 01       	movw	r26, r24
    1286:	fc 01       	movw	r30, r24
    1288:	67 2f       	mov	r22, r23
    128a:	71 91       	ld	r23, Z+
    128c:	77 23       	and	r23, r23
    128e:	e1 f7       	brne	.-8      	; 0x1288 <strrev+0x4>
    1290:	32 97       	sbiw	r30, 0x02	; 2
    1292:	04 c0       	rjmp	.+8      	; 0x129c <strrev+0x18>
    1294:	7c 91       	ld	r23, X
    1296:	6d 93       	st	X+, r22
    1298:	70 83       	st	Z, r23
    129a:	62 91       	ld	r22, -Z
    129c:	ae 17       	cp	r26, r30
    129e:	bf 07       	cpc	r27, r31
    12a0:	c8 f3       	brcs	.-14     	; 0x1294 <strrev+0x10>
    12a2:	08 95       	ret

000012a4 <fputc>:
    12a4:	0f 93       	push	r16
    12a6:	1f 93       	push	r17
    12a8:	cf 93       	push	r28
    12aa:	df 93       	push	r29
    12ac:	fb 01       	movw	r30, r22
    12ae:	23 81       	ldd	r18, Z+3	; 0x03
    12b0:	21 fd       	sbrc	r18, 1
    12b2:	03 c0       	rjmp	.+6      	; 0x12ba <fputc+0x16>
    12b4:	8f ef       	ldi	r24, 0xFF	; 255
    12b6:	9f ef       	ldi	r25, 0xFF	; 255
    12b8:	2c c0       	rjmp	.+88     	; 0x1312 <fputc+0x6e>
    12ba:	22 ff       	sbrs	r18, 2
    12bc:	16 c0       	rjmp	.+44     	; 0x12ea <fputc+0x46>
    12be:	46 81       	ldd	r20, Z+6	; 0x06
    12c0:	57 81       	ldd	r21, Z+7	; 0x07
    12c2:	24 81       	ldd	r18, Z+4	; 0x04
    12c4:	35 81       	ldd	r19, Z+5	; 0x05
    12c6:	42 17       	cp	r20, r18
    12c8:	53 07       	cpc	r21, r19
    12ca:	44 f4       	brge	.+16     	; 0x12dc <fputc+0x38>
    12cc:	a0 81       	ld	r26, Z
    12ce:	b1 81       	ldd	r27, Z+1	; 0x01
    12d0:	9d 01       	movw	r18, r26
    12d2:	2f 5f       	subi	r18, 0xFF	; 255
    12d4:	3f 4f       	sbci	r19, 0xFF	; 255
    12d6:	31 83       	std	Z+1, r19	; 0x01
    12d8:	20 83       	st	Z, r18
    12da:	8c 93       	st	X, r24
    12dc:	26 81       	ldd	r18, Z+6	; 0x06
    12de:	37 81       	ldd	r19, Z+7	; 0x07
    12e0:	2f 5f       	subi	r18, 0xFF	; 255
    12e2:	3f 4f       	sbci	r19, 0xFF	; 255
    12e4:	37 83       	std	Z+7, r19	; 0x07
    12e6:	26 83       	std	Z+6, r18	; 0x06
    12e8:	14 c0       	rjmp	.+40     	; 0x1312 <fputc+0x6e>
    12ea:	8b 01       	movw	r16, r22
    12ec:	ec 01       	movw	r28, r24
    12ee:	fb 01       	movw	r30, r22
    12f0:	00 84       	ldd	r0, Z+8	; 0x08
    12f2:	f1 85       	ldd	r31, Z+9	; 0x09
    12f4:	e0 2d       	mov	r30, r0
    12f6:	09 95       	icall
    12f8:	89 2b       	or	r24, r25
    12fa:	e1 f6       	brne	.-72     	; 0x12b4 <fputc+0x10>
    12fc:	d8 01       	movw	r26, r16
    12fe:	16 96       	adiw	r26, 0x06	; 6
    1300:	8d 91       	ld	r24, X+
    1302:	9c 91       	ld	r25, X
    1304:	17 97       	sbiw	r26, 0x07	; 7
    1306:	01 96       	adiw	r24, 0x01	; 1
    1308:	17 96       	adiw	r26, 0x07	; 7
    130a:	9c 93       	st	X, r25
    130c:	8e 93       	st	-X, r24
    130e:	16 97       	sbiw	r26, 0x06	; 6
    1310:	ce 01       	movw	r24, r28
    1312:	df 91       	pop	r29
    1314:	cf 91       	pop	r28
    1316:	1f 91       	pop	r17
    1318:	0f 91       	pop	r16
    131a:	08 95       	ret

0000131c <__ultoa_invert>:
    131c:	fa 01       	movw	r30, r20
    131e:	aa 27       	eor	r26, r26
    1320:	28 30       	cpi	r18, 0x08	; 8
    1322:	51 f1       	breq	.+84     	; 0x1378 <__ultoa_invert+0x5c>
    1324:	20 31       	cpi	r18, 0x10	; 16
    1326:	81 f1       	breq	.+96     	; 0x1388 <__ultoa_invert+0x6c>
    1328:	e8 94       	clt
    132a:	6f 93       	push	r22
    132c:	6e 7f       	andi	r22, 0xFE	; 254
    132e:	6e 5f       	subi	r22, 0xFE	; 254
    1330:	7f 4f       	sbci	r23, 0xFF	; 255
    1332:	8f 4f       	sbci	r24, 0xFF	; 255
    1334:	9f 4f       	sbci	r25, 0xFF	; 255
    1336:	af 4f       	sbci	r26, 0xFF	; 255
    1338:	b1 e0       	ldi	r27, 0x01	; 1
    133a:	3e d0       	rcall	.+124    	; 0x13b8 <__ultoa_invert+0x9c>
    133c:	b4 e0       	ldi	r27, 0x04	; 4
    133e:	3c d0       	rcall	.+120    	; 0x13b8 <__ultoa_invert+0x9c>
    1340:	67 0f       	add	r22, r23
    1342:	78 1f       	adc	r23, r24
    1344:	89 1f       	adc	r24, r25
    1346:	9a 1f       	adc	r25, r26
    1348:	a1 1d       	adc	r26, r1
    134a:	68 0f       	add	r22, r24
    134c:	79 1f       	adc	r23, r25
    134e:	8a 1f       	adc	r24, r26
    1350:	91 1d       	adc	r25, r1
    1352:	a1 1d       	adc	r26, r1
    1354:	6a 0f       	add	r22, r26
    1356:	71 1d       	adc	r23, r1
    1358:	81 1d       	adc	r24, r1
    135a:	91 1d       	adc	r25, r1
    135c:	a1 1d       	adc	r26, r1
    135e:	20 d0       	rcall	.+64     	; 0x13a0 <__ultoa_invert+0x84>
    1360:	09 f4       	brne	.+2      	; 0x1364 <__ultoa_invert+0x48>
    1362:	68 94       	set
    1364:	3f 91       	pop	r19
    1366:	2a e0       	ldi	r18, 0x0A	; 10
    1368:	26 9f       	mul	r18, r22
    136a:	11 24       	eor	r1, r1
    136c:	30 19       	sub	r19, r0
    136e:	30 5d       	subi	r19, 0xD0	; 208
    1370:	31 93       	st	Z+, r19
    1372:	de f6       	brtc	.-74     	; 0x132a <__ultoa_invert+0xe>
    1374:	cf 01       	movw	r24, r30
    1376:	08 95       	ret
    1378:	46 2f       	mov	r20, r22
    137a:	47 70       	andi	r20, 0x07	; 7
    137c:	40 5d       	subi	r20, 0xD0	; 208
    137e:	41 93       	st	Z+, r20
    1380:	b3 e0       	ldi	r27, 0x03	; 3
    1382:	0f d0       	rcall	.+30     	; 0x13a2 <__ultoa_invert+0x86>
    1384:	c9 f7       	brne	.-14     	; 0x1378 <__ultoa_invert+0x5c>
    1386:	f6 cf       	rjmp	.-20     	; 0x1374 <__ultoa_invert+0x58>
    1388:	46 2f       	mov	r20, r22
    138a:	4f 70       	andi	r20, 0x0F	; 15
    138c:	40 5d       	subi	r20, 0xD0	; 208
    138e:	4a 33       	cpi	r20, 0x3A	; 58
    1390:	18 f0       	brcs	.+6      	; 0x1398 <__ultoa_invert+0x7c>
    1392:	49 5d       	subi	r20, 0xD9	; 217
    1394:	31 fd       	sbrc	r19, 1
    1396:	40 52       	subi	r20, 0x20	; 32
    1398:	41 93       	st	Z+, r20
    139a:	02 d0       	rcall	.+4      	; 0x13a0 <__ultoa_invert+0x84>
    139c:	a9 f7       	brne	.-22     	; 0x1388 <__ultoa_invert+0x6c>
    139e:	ea cf       	rjmp	.-44     	; 0x1374 <__ultoa_invert+0x58>
    13a0:	b4 e0       	ldi	r27, 0x04	; 4
    13a2:	a6 95       	lsr	r26
    13a4:	97 95       	ror	r25
    13a6:	87 95       	ror	r24
    13a8:	77 95       	ror	r23
    13aa:	67 95       	ror	r22
    13ac:	ba 95       	dec	r27
    13ae:	c9 f7       	brne	.-14     	; 0x13a2 <__ultoa_invert+0x86>
    13b0:	00 97       	sbiw	r24, 0x00	; 0
    13b2:	61 05       	cpc	r22, r1
    13b4:	71 05       	cpc	r23, r1
    13b6:	08 95       	ret
    13b8:	9b 01       	movw	r18, r22
    13ba:	ac 01       	movw	r20, r24
    13bc:	0a 2e       	mov	r0, r26
    13be:	06 94       	lsr	r0
    13c0:	57 95       	ror	r21
    13c2:	47 95       	ror	r20
    13c4:	37 95       	ror	r19
    13c6:	27 95       	ror	r18
    13c8:	ba 95       	dec	r27
    13ca:	c9 f7       	brne	.-14     	; 0x13be <__ultoa_invert+0xa2>
    13cc:	62 0f       	add	r22, r18
    13ce:	73 1f       	adc	r23, r19
    13d0:	84 1f       	adc	r24, r20
    13d2:	95 1f       	adc	r25, r21
    13d4:	a0 1d       	adc	r26, r0
    13d6:	08 95       	ret

000013d8 <__prologue_saves__>:
    13d8:	2f 92       	push	r2
    13da:	3f 92       	push	r3
    13dc:	4f 92       	push	r4
    13de:	5f 92       	push	r5
    13e0:	6f 92       	push	r6
    13e2:	7f 92       	push	r7
    13e4:	8f 92       	push	r8
    13e6:	9f 92       	push	r9
    13e8:	af 92       	push	r10
    13ea:	bf 92       	push	r11
    13ec:	cf 92       	push	r12
    13ee:	df 92       	push	r13
    13f0:	ef 92       	push	r14
    13f2:	ff 92       	push	r15
    13f4:	0f 93       	push	r16
    13f6:	1f 93       	push	r17
    13f8:	cf 93       	push	r28
    13fa:	df 93       	push	r29
    13fc:	cd b7       	in	r28, 0x3d	; 61
    13fe:	de b7       	in	r29, 0x3e	; 62
    1400:	ca 1b       	sub	r28, r26
    1402:	db 0b       	sbc	r29, r27
    1404:	0f b6       	in	r0, 0x3f	; 63
    1406:	f8 94       	cli
    1408:	de bf       	out	0x3e, r29	; 62
    140a:	0f be       	out	0x3f, r0	; 63
    140c:	cd bf       	out	0x3d, r28	; 61
    140e:	09 94       	ijmp

00001410 <__epilogue_restores__>:
    1410:	2a 88       	ldd	r2, Y+18	; 0x12
    1412:	39 88       	ldd	r3, Y+17	; 0x11
    1414:	48 88       	ldd	r4, Y+16	; 0x10
    1416:	5f 84       	ldd	r5, Y+15	; 0x0f
    1418:	6e 84       	ldd	r6, Y+14	; 0x0e
    141a:	7d 84       	ldd	r7, Y+13	; 0x0d
    141c:	8c 84       	ldd	r8, Y+12	; 0x0c
    141e:	9b 84       	ldd	r9, Y+11	; 0x0b
    1420:	aa 84       	ldd	r10, Y+10	; 0x0a
    1422:	b9 84       	ldd	r11, Y+9	; 0x09
    1424:	c8 84       	ldd	r12, Y+8	; 0x08
    1426:	df 80       	ldd	r13, Y+7	; 0x07
    1428:	ee 80       	ldd	r14, Y+6	; 0x06
    142a:	fd 80       	ldd	r15, Y+5	; 0x05
    142c:	0c 81       	ldd	r16, Y+4	; 0x04
    142e:	1b 81       	ldd	r17, Y+3	; 0x03
    1430:	aa 81       	ldd	r26, Y+2	; 0x02
    1432:	b9 81       	ldd	r27, Y+1	; 0x01
    1434:	ce 0f       	add	r28, r30
    1436:	d1 1d       	adc	r29, r1
    1438:	0f b6       	in	r0, 0x3f	; 63
    143a:	f8 94       	cli
    143c:	de bf       	out	0x3e, r29	; 62
    143e:	0f be       	out	0x3f, r0	; 63
    1440:	cd bf       	out	0x3d, r28	; 61
    1442:	ed 01       	movw	r28, r26
    1444:	08 95       	ret

00001446 <_exit>:
    1446:	f8 94       	cli

00001448 <__stop_program>:
    1448:	ff cf       	rjmp	.-2      	; 0x1448 <__stop_program>
